# -*- mode: org -*-
#+STARTUP: indent hidestars showall

* github setting keys
https://github.com/settings/keys
1. ssh-keygen -t rsa -b 4096 "your_email@example.com"  -> this can be
   the user account from one of your laptops, example adam@quack
2. go to github/profile/personal settings/ssh and gpg keys/new ssh key
3. copy and paste ~/.ssh/id_rsa.pub
4. now should be able to hub clone frankieliu/Admin
5. [using ssh-agent]:
   eval "$(ssh-agent -s)"
   ssh-add ~/.ssh/id_rsa (or location of your private key)

https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#adding-your-ssh-key-to-the-ssh-agent

* stanford rec
ashtanga yoga
https://recwell.stanford.edu/Program/GetProgramDetails?courseId=7bad575a-700c-4c18-8f94-518fce90b625&semesterId=8bb86a37-662a-4c75-a803-d9d5ec76860e

facility
https://rec.stanford.edu/facilities/aoerc/

Courtesy Card, Recreating All Access Card
https://cardinalatwork.stanford.edu/benefits-rewards/sweeteners/courtesy-recreation-id-cards

requirements to bring with you
marriage license and birth certificate
https://uit.stanford.edu/service/campuscard/courtesycard

policy
https://adminguide.stanford.edu/chapter-2/subchapter-4/policy-2-4-3
https://rec.stanford.edu/facility-access/affiliates/

Tressider
https://uit.stanford.edu/service/campuscard

* farmshare
** change shell
https://web.stanford.edu/group/farmshare/cgi-bin/wiki/index.php/FAQ#How_do_I_change_my_shell.3F
https://web.stanford.edu/group/farmshare/cgi-bin/wiki/index.php/FAQ#How_do_I_change_my_shell.3F

** slurm longer time
While the maximum runtime for jobs is 2 days (unless you are
submitting a job using the long quality-of-service), the default
runtime is 2 hours. If your job requires more time to run you must
request the additional time explicitly, using --time. You can also
request less time than the default.

** cluster description
https://web.stanford.edu/group/farmshare/cgi-bin/wiki/index.php/FarmShare_2#Remote_display

rice 1 core 8 gb

For more excess of limits use:
srun --pty --qos=interactive $SHELL -l
srun --pty --partition=gpu --gres=gpu:1 --qos=interactive $SHELL -l
srun --pty --partition=bigmem --mem=96G --qos=interactive $SHELL -l

wheat
10 nodes with 16 cores and 128GB mem
2 large-mem nodes with 16 cores and 768GB mem
srun --partition=bigmem --qos=bigmem --mem=96G
sbatch --partition=bigmem --qos=bigmem --mem=96G

oat
10 nodes with 16 cores 128GB mem, one Tesla K40 GPU
srun --partition=gpu --qos=gpu --gres=gpu:1
sbatch --partition=gpu --qos=gpu --gres=gpu:1

--partitions: normal bigmem gpu

** time limits
--qos: normal (2days max) long (7days max) interactive (1day max)

** quotas
Per use quote 48GB
only rice can access /afs
Use /farmshare/user_data for scratch

* slurm summary
https://slurm.schedmd.com/pdfs/summary.pdf
srun  --mem=<MB> -N<minnodes> --partition=<names> --qos=<name>
--time=<time>
sacct --accounts=frankieliu --en
scancel  # cancel jobs
squeue --users=frankliu
sinfo --long

* gentlemen of vision
gentlemen of vision bay area
https://www.youtube.com/watch?v=OFb0EUIkYac
https://www.youtube.com/watch?v=THJ2YEvRgkM
http://victorsho.com/#!/?page_id=42

* prevent ssh from closing during forward
ssh -N -L 5903:localhost:5901 frankliu@wheat09.stanford.edu

-N : don't run a command, i.e. stays connected without having to run a
command useful during port forwarding

https://serverfault.com/questions/598210/prevent-closing-of-ssh-local-port-forwarding
Some advocate autossh - don't know what this really is

* slurm run interactive shell
srun --qos=interactive --time=02:00:00 --pty bash -i

* web programming fundamentals
cs193x
https://web.stanford.edu/class/cs193x/lectures/

* stanford online resources
install this chrome plugin
https://chrome.google.com/webstore/detail/library-access/hghakoefmnkhamdhenpbogkeopjlkpoa/related

* naxos library
https://stanford-naxosmusiclibrary-com.stanford.idm.oclc.org/catalogue/item.asp?cid=MELCD1001348

* cgi
https://www.tcl.tk/man/aolserver3.0/cgi-ch1.htm
** stanford
https://tools.stanford.edu/cgi-bin/cgi-request
** instruction
https://uit.stanford.edu/service/cgi

* afs stanford
https://uit.stanford.edu/software/afs/download
requires openafs in windows and macs for ubuntu see separate instructions
** kerberos
https://uit.stanford.edu/service/kerberos/install_debian
This might be a little old? (2014)
Too many steps...
** afs for mac or windows
https://web.stanford.edu/service/afs/intro/mounting.html
** webafs
https://web.stanford.edu/service/afs/webafs/userguide/index.html
** afs for beginners
https://web.stanford.edu/service/afs/intro/index.html

* linuxbrew
frankliu@rice12:/afs/ir.stanford.edu/users/f/r/frankliu/cgi-bin$ sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
==> Select the Linuxbrew installation directory
- Enter your password to install to /home/linuxbrew/.linuxbrew (recommended)
- Press Control-D to install to /home/frankliu/.linuxbrew
- Press Control-C to cancel installation
Sorry, user frankliu may not run sudo on rice12.stanford.edu.
==> This script will install:
/home/frankliu/.linuxbrew/bin/brew
/home/frankliu/.linuxbrew/share/doc/homebrew
/home/frankliu/.linuxbrew/share/man/man1/brew.1
/home/frankliu/.linuxbrew/share/zsh/site-functions/_brew
/home/frankliu/.linuxbrew/etc/bash_completion.d/brew
/home/frankliu/.cache/Homebrew/
/home/frankliu/.linuxbrew/Homebrew
==> The following new directories will be created:
/home/frankliu/.linuxbrew/bin
/home/frankliu/.linuxbrew/etc
/home/frankliu/.linuxbrew/include
/home/frankliu/.linuxbrew/lib
/home/frankliu/.linuxbrew/sbin
/home/frankliu/.linuxbrew/share
/home/frankliu/.linuxbrew/var
/home/frankliu/.linuxbrew/opt
/home/frankliu/.linuxbrew/share/zsh
/home/frankliu/.linuxbrew/share/zsh/site-functions
/home/frankliu/.linuxbrew/Cellar
/home/frankliu/.linuxbrew/Caskroom
/home/frankliu/.linuxbrew/Homebrew
/home/frankliu/.linuxbrew/Frameworks

Press RETURN to continue or any other key to abort
==> /bin/mkdir -p /home/frankliu/.linuxbrew
==> /bin/chown frankliu:operator /home/frankliu/.linuxbrew
==> /bin/mkdir -p /home/frankliu/.linuxbrew/bin /home/frankliu/.linuxbrew/etc /home/frankliu/.linuxbrew/include /home/frankliu/.linuxbrew/lib /home/frankliu/.linuxbrew/sbin /home/frankliu/.linuxbrew/share /home/frankliu/.linuxbrew/var /home/frankliu/.linuxbrew/opt /home/frankliu/.linuxbrew/share/zsh /home/frankliu/.linuxbrew/share/zsh/site-functions /home/frankliu/.linuxbrew/Cellar /home/frankliu/.linuxbrew/Caskroom /home/frankliu/.linuxbrew/Homebrew /home/frankliu/.linuxbrew/Frameworks
==> /bin/chmod g+rwx /home/frankliu/.linuxbrew/bin /home/frankliu/.linuxbrew/etc /home/frankliu/.linuxbrew/include /home/frankliu/.linuxbrew/lib /home/frankliu/.linuxbrew/sbin /home/frankliu/.linuxbrew/share /home/frankliu/.linuxbrew/var /home/frankliu/.linuxbrew/opt /home/frankliu/.linuxbrew/share/zsh /home/frankliu/.linuxbrew/share/zsh/site-functions /home/frankliu/.linuxbrew/Cellar /home/frankliu/.linuxbrew/Caskroom /home/frankliu/.linuxbrew/Homebrew /home/frankliu/.linuxbrew/Frameworks
==> /bin/chmod 755 /home/frankliu/.linuxbrew/share/zsh /home/frankliu/.linuxbrew/share/zsh/site-functions
==> /bin/chown frankliu /home/frankliu/.linuxbrew/bin /home/frankliu/.linuxbrew/etc /home/frankliu/.linuxbrew/include /home/frankliu/.linuxbrew/lib /home/frankliu/.linuxbrew/sbin /home/frankliu/.linuxbrew/share /home/frankliu/.linuxbrew/var /home/frankliu/.linuxbrew/opt /home/frankliu/.linuxbrew/share/zsh /home/frankliu/.linuxbrew/share/zsh/site-functions /home/frankliu/.linuxbrew/Cellar /home/frankliu/.linuxbrew/Caskroom /home/frankliu/.linuxbrew/Homebrew /home/frankliu/.linuxbrew/Frameworks
==> /bin/chgrp operator /home/frankliu/.linuxbrew/bin /home/frankliu/.linuxbrew/etc /home/frankliu/.linuxbrew/include /home/frankliu/.linuxbrew/lib /home/frankliu/.linuxbrew/sbin /home/frankliu/.linuxbrew/share /home/frankliu/.linuxbrew/var /home/frankliu/.linuxbrew/opt /home/frankliu/.linuxbrew/share/zsh /home/frankliu/.linuxbrew/share/zsh/site-functions /home/frankliu/.linuxbrew/Cellar /home/frankliu/.linuxbrew/Caskroom /home/frankliu/.linuxbrew/Homebrew /home/frankliu/.linuxbrew/Frameworks
==> /bin/mkdir -p /home/frankliu/.cache/Homebrew
==> Downloading and installing Linuxbrew...
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 122304 (delta 0), reused 2 (delta 0), pack-reused 122297
Receiving objects: 100% (122304/122304), 27.74 MiB | 25.46 MiB/s, done.
Resolving deltas: 100% (89729/89729), done.
From https://github.com/Linuxbrew/brew
 * [new branch]      master     -> origin/master
 * [new tag]         1.0.0      -> 1.0.0
 * [new tag]         1.0.1      -> 1.0.1
 * [new tag]         1.0.2      -> 1.0.2
 * [new tag]         1.0.3      -> 1.0.3
 * [new tag]         1.0.4      -> 1.0.4
 * [new tag]         1.0.5      -> 1.0.5
 * [new tag]         1.0.6      -> 1.0.6
 * [new tag]         1.0.7      -> 1.0.7
 * [new tag]         1.0.8      -> 1.0.8
 * [new tag]         1.0.9      -> 1.0.9
 * [new tag]         1.1.0      -> 1.1.0
 * [new tag]         1.1.0.1    -> 1.1.0.1
 * [new tag]         1.1.1      -> 1.1.1
 * [new tag]         1.1.10     -> 1.1.10
 * [new tag]         1.1.11     -> 1.1.11
 * [new tag]         1.1.12     -> 1.1.12
 * [new tag]         1.1.13     -> 1.1.13
 * [new tag]         1.1.2      -> 1.1.2
 * [new tag]         1.1.2.1    -> 1.1.2.1
 * [new tag]         1.1.3      -> 1.1.3
 * [new tag]         1.1.4      -> 1.1.4
 * [new tag]         1.1.5      -> 1.1.5
 * [new tag]         1.1.6      -> 1.1.6
 * [new tag]         1.1.7      -> 1.1.7
 * [new tag]         1.1.8      -> 1.1.8
 * [new tag]         1.1.9      -> 1.1.9
 * [new tag]         1.2.0      -> 1.2.0
 * [new tag]         1.2.1      -> 1.2.1
 * [new tag]         1.2.2      -> 1.2.2
 * [new tag]         1.2.3      -> 1.2.3
 * [new tag]         1.2.4      -> 1.2.4
 * [new tag]         1.2.5      -> 1.2.5
 * [new tag]         1.2.6      -> 1.2.6
 * [new tag]         1.2.7      -> 1.2.7
 * [new tag]         1.2.8      -> 1.2.8
 * [new tag]         1.3.0      -> 1.3.0
 * [new tag]         1.3.1      -> 1.3.1
 * [new tag]         1.3.2      -> 1.3.2
 * [new tag]         1.3.3      -> 1.3.3
 * [new tag]         1.3.4      -> 1.3.4
 * [new tag]         1.3.5      -> 1.3.5
 * [new tag]         1.3.6      -> 1.3.6
 * [new tag]         1.3.7      -> 1.3.7
 * [new tag]         1.3.8      -> 1.3.8
 * [new tag]         1.3.9      -> 1.3.9
 * [new tag]         1.4.0      -> 1.4.0
 * [new tag]         1.4.1      -> 1.4.1
 * [new tag]         1.4.2      -> 1.4.2
 * [new tag]         1.4.3      -> 1.4.3
 * [new tag]         1.5.0      -> 1.5.0
 * [new tag]         1.5.1      -> 1.5.1
 * [new tag]         1.5.10     -> 1.5.10
 * [new tag]         1.5.11     -> 1.5.11
 * [new tag]         1.5.12     -> 1.5.12
 * [new tag]         1.5.13     -> 1.5.13
 * [new tag]         1.5.14     -> 1.5.14
 * [new tag]         1.5.2      -> 1.5.2
 * [new tag]         1.5.3      -> 1.5.3
 * [new tag]         1.5.4      -> 1.5.4
 * [new tag]         1.5.5      -> 1.5.5
 * [new tag]         1.5.6      -> 1.5.6
 * [new tag]         1.5.7      -> 1.5.7
 * [new tag]         1.5.8      -> 1.5.8
 * [new tag]         1.5.9      -> 1.5.9
 * [new tag]         1.6.0      -> 1.6.0
 * [new tag]         1.6.1      -> 1.6.1
 * [new tag]         1.6.10     -> 1.6.10
 * [new tag]         1.6.11     -> 1.6.11
 * [new tag]         1.6.12     -> 1.6.12
 * [new tag]         1.6.13     -> 1.6.13
 * [new tag]         1.6.14     -> 1.6.14
 * [new tag]         1.6.15     -> 1.6.15
 * [new tag]         1.6.16     -> 1.6.16
 * [new tag]         1.6.17     -> 1.6.17
 * [new tag]         1.6.2      -> 1.6.2
 * [new tag]         1.6.3      -> 1.6.3
 * [new tag]         1.6.4      -> 1.6.4
 * [new tag]         1.6.5      -> 1.6.5
 * [new tag]         1.6.6      -> 1.6.6
 * [new tag]         1.6.7      -> 1.6.7
 * [new tag]         1.6.8      -> 1.6.8
 * [new tag]         1.6.9      -> 1.6.9
 * [new tag]         1.7.0      -> 1.7.0
 * [new tag]         1.7.1      -> 1.7.1
 * [new tag]         1.7.2      -> 1.7.2
 * [new tag]         1.7.3      -> 1.7.3
 * [new tag]         1.7.4      -> 1.7.4
 * [new tag]         1.7.5      -> 1.7.5
 * [new tag]         1.7.6      -> 1.7.6
 * [new tag]         1.7.7      -> 1.7.7
Checking out files: 100% (1472/1472), done.
HEAD is now at 7655407 .github/move.yml: Fix for Linuxbrew
==> Downloading https://linuxbrew.bintray.com/bottles-portable-ruby/portable-ruby-2.3.7.x86_64_linux.bottle.tar.gz
######################################################################## 100.0%
==> Pouring portable-ruby-2.3.7.x86_64_linux.bottle.tar.gz
==> Linuxbrew is run entirely by unpaid volunteers. Please consider donating:
  https://github.com/Linuxbrew/brew#donations
==> Tapping homebrew/core
Cloning into '/home/frankliu/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core'...
remote: Enumerating objects: 4897, done.
remote: Counting objects: 100% (4897/4897), done.
remote: Compressing objects: 100% (4693/4693), done.
remote: Total 4897 (delta 50), reused 329 (delta 12), pack-reused 0
Receiving objects: 100% (4897/4897), 4.26 MiB | 0 bytes/s, done.
Resolving deltas: 100% (50/50), done.
Checking connectivity... done.
Checking out files: 100% (4913/4913), done.
Tapped 3 commands and 4678 formulae (4,936 files, 13.2MB).
Already up-to-date.
==> Installation successful!

==> Homebrew has enabled anonymous aggregate formulae and cask analytics.
Read the analytics documentation (and how to opt-out) here:
  https://docs.brew.sh/Analytics.html

==> Homebrew is run entirely by unpaid volunteers. Please consider donating:
  https://github.com/Homebrew/brew#donations
==> Next steps:
- Install the Linuxbrew dependencies if you have sudo access:
  Debian, Ubuntu, etc.
    sudo apt-get install build-essential
  Fedora, Red Hat, CentOS, etc.
    sudo yum groupinstall 'Development Tools'
  See http://linuxbrew.sh/#dependencies for more information.
- Add Linuxbrew to your ~/.profile by running
    echo 'export PATH="/home/frankliu/.linuxbrew/bin:$PATH"' >>~/.profile
    echo 'export MANPATH="/home/frankliu/.linuxbrew/share/man:$MANPATH"' >>~/.profile
    echo 'export INFOPATH="/home/frankliu/.linuxbrew/share/info:$INFOPATH"' >>~/.profile
- Add Linuxbrew to your PATH
    PATH="/home/frankliu/.linuxbrew/bin:$PATH"
- We recommend that you install GCC by running:
    brew install gcc
- After modifying your shell profile, you may need to restart your session
  (logout and then log back in) if the brew command isn't found.
- Run `brew help` to get started
- Further documentation:
    https://docs.brew.sh
Warning: /home/frankliu/.linuxbrew/bin is not in your PATH.

* snap without sudo
https://ubuntu-mate.community/t/snap-without-sudo/15473
snap login
snap install rg (ripgrep)

* print python verion
https://stackoverflow.com/questions/1252163/printing-python-version-in-output
import sys
print(sys.version)

import platform
platform.python_version()

* every nth row excel
=offset($A$2,(ROW()-2)*1,0)    : every other row 2,4,6,8, ....
=offset($A$23,(ROW()-23)*2,0)  : every third row 23,26,29, ....

* react and flask
https://realpython.com/the-ultimate-flask-front-end/
https://realpython.com/the-ultimate-flask-front-end-part-2/

These don't really explain how flask is being used but it does have
a simple react application.

* vue and django and rabbitmq
https://danidee10.github.io/blog/

* django and cgi
https://gist.github.com/philchristensen/5845530
https://docs.djangoproject.com/en/1.8/howto/deployment/fastcgi/

* let's see if fastcgi works
http://flask.pocoo.org/docs/0.12/deploying/fastcgi/

* full stack react
https://codeburst.io/creating-a-full-stack-web-application-with-python-npm-webpack-and-react-8925800503d9

* stanford geo
** shared folder
https://app.box.com/folder/14552064708
** RIA
http://www.guillaumelobet.be/RIA/
** morphology TPS thin plate spline
https://en.wikipedia.org/wiki/Geometric_morphometrics_in_anthropology
http://www.dg1an3.net/2015/03/warptps.html
** eucledian distance measurement
https://www.youtube.com/watch?v=zGPmrRCnF6Y

* latex proper subset
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols

* basic probability
https://www.youtube.com/watch?v=Y8EOkJ75elM

* what does independence look like on venn diagram
https://www.youtube.com/watch?v=pV3nZAsJxl0
https://www.ck12.org/book/CK-12-Algebra-II-with-Trigonometry/section/12.5/

* user guide afs storage and ssh fundamental slurm
https://web.stanford.edu/group/farmshare/cgi-bin/wiki/index.php/User_Guide#Storage
https://slurm.schedmd.com/quickstart.html
https://srcc.stanford.edu/services-systems-overview
https://web.stanford.edu/group/farmshare/cgi-bin/wiki/index.php/Main_Page#Software

* singularity
https://singularity.lbl.gov/docs-docker
http://singularity.lbl.gov/install-request

flow of singularity
http://singularity.lbl.gov/docs-flow

build images from scratch
http://singularity.lbl.gov/quickstart#build-images-from-scratch
http://singularity.lbl.gov/archive/docs/v2-2/create-image

mounting
http://singularity.lbl.gov/archive/docs/v2-2/docs-mount

hub - where images are located
https://www.singularity-hub.org/collections/1819

manual build
https://github.com/singularityhub/singularityhub.github.io/wiki/Manual-Build

build a container
https://github.com/singularityhub/singularityhub.github.io/wiki/Build-A-Container

my singularity repo - don't change it
https://github.com/frankieliu/singularity

company behind singularity
https://www.sylabs.io/singularity/

faq on singularity
http://singularity.lbl.gov/faq
http://singularity.lbl.gov/faq

forum on singularity
https://groups.google.com/a/lbl.gov/forum/#!forum/singularity

web browser in singularity
https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/rtGSOf8Q0Iw

example singularity script with firefox
https://github.com/vsoch/singularity-butterfly/blob/master/Singularity

sample singularity with emacs vim python stuff
http://singularity-hub.org/containers/3790

sample docker with tensorflow
https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile

* gsuite
https://uit.stanford.edu/service/gsuite/login
Webmail (GSB faculty, staff, and students, and some undergraduate students): webmail.stanford.edu
Calendar (GSB faculty, staff, and students, and some undergraduate students): webcal.stanford.edu
Drive: webdocs.stanford.edu

** creating sites
https://gsuite.google.com/learning-center/products/sites/get-started/#!/
** deploy web apps and add them to your url
https://developers.google.com/apps-script/guides/web

* ipython notebooks in google cloud
https://colab.research.google.com/notebooks/welcome.ipynb#recent=true

* ubuntu list all installed packages
sudo apt list --installed
sudo dpkg -l
https://www.rosehosting.com/blog/list-all-installed-packages-with-apt-on-ubuntu/

manually installed packages
Using apt-mark and aptitude
comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
comm -23 <(aptitude search '~i !~M' -F '%p' | sed "s/ *$//" | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
https://askubuntu.com/questions/2389/generating-list-of-manually-installed-packages-and-querying-individual-packages

* unpack deb standalone apps
https://unix.stackexchange.com/questions/138188/easily-unpack-deb-edit-postinst-and-repack-deb
mkdir tmp
dpkg-deb -R original.deb tmp
dpkg-deb -b tmp fixed.deb

fakeroot might be needed

* installing google-chrome
download the deb
dpkg-deb -r <package>.deb <location>
https://www.linuxbabe.com/ubuntu/install-google-chrome-ubuntu-16-04-lts
https://support.google.com/chrome/answer/95346?co=GENIE.Platform%3DDesktop&hl=en
https://www.google.com/chrome/

* firefox download
https://www.mozilla.org/en-US/firefox/download/thanks/
https://ftp.mozilla.org/pub/firefox/releases/63.0b9/linux-x86_64/en-US/

* ubuntu docker repository
https://hub.docker.com/search/?isAutomated=0&isOfficial=0&page=1&pullCount=0&q=ubuntu+18&starCount=0
** x11-apps in docker
https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container/25280523#25280523

** docker with visual code, dotnet cli, npm, emacs, firefox and more
https://github.com/cmiles74/docker-vscode

** guis in docker
http://wiki.ros.org/docker/Tutorials/GUI

* stanford webauth and user authentication
https://uit.stanford.edu/service/web/centralhosting/howto_user
https://uit.stanford.edu/service/web/centralhosting/userauth

SAML 2.0
https://uit.stanford.edu/service/saml

Combine node.js sso with shibboleth saml identify provider
https://wiki.library.ucsf.edu/pages/viewpage.action?pageId=361762610

* lamp vs mean replacing apache with node.js
https://stackoverflow.com/questions/5346055/can-i-replace-apache-with-node-js
run apache in proxy mode to serve dynamic pages with node and
static pages with apache

https://blog.cloudboost.io/get-apache-and-node-working-together-on-the-same-domain-with-javascript-ajax-requests-39db51959b79
apache and node working together

* web design stanford
https://uit.stanford.edu/guide/website
https://uit.stanford.edu/guide/website/personal
https://uit.stanford.edu/service/web/design

Web App Toolkit - database
https://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/Stanford_Web_Application_Toolkit

Wiki services
https://opensource.stanford.edu/topics/web-development
https://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/How_to_get_your_first_PHP_script_running_at_Stanford
https://tools.stanford.edu/cgi-bin/cgi-request
https://uit.stanford.edu/service/cgi/personal
https://web.stanford.edu/~frankliu/cgi-bin/lsbin.sh
https://web.stanford.edu/~frankliu/cgi-bin/deploy.fcgi/slasfd
https://uit.stanford.edu/service/cgi

Debugging
https://uit.stanford.edu/service/cgi/debugging
https://uit.stanford.edu/service/cgi/debugging

CGI scripts
https://uit.stanford.edu/service/cgi/scripts

CGI service
https://uit.stanford.edu/service/cgi

Php cookbook
http://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/PHP_Cookbook

Cgi faq
https://uit.stanford.edu/service/cgi/faq
https://uit.stanford.edu/service/cgi/faq

Example CGI scripts
https://uit.stanford.edu/service/cgi/scripts
https://tools.stanford.edu/sumysql

Infrastructure tools
https://tools.stanford.edu/
https://tools.stanford.edu/cgi-bin/cgi-request

Web resources
https://uit.stanford.edu/service/web

http://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/Main_Page
http://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/Stanford_Web_Application_Toolkit
https://web.stanford.edu/dept/its/communications/webservices/wiki/index.php/Special:Statistics

https://stanford.service-now.com/services?id=get_help
https://stanford.service-now.com/services?id=get_help

* flask setup
http://flask.pocoo.org/

* node in google cloud
https://cloud.google.com/nodejs/docs/setup
https://cloud.google.com/free/docs/always-free-usage-limits
https://cloud.google.com/appengine/pricing
https://cloud.google.com/community/tutorials/run-expressjs-on-google-app-engine
https://cloud.google.com/nodejs/getting-started/hello-world

* my web page
https://web.stanford.edu/~frankliu/cgi-bin/lsbin.sh

* node-and-npm-in-30-seconds.sh
https://gist.github.com/isaacs/579814

* package managers
http://linuxbrew.sh/
https://opensource.com/article/18/7/evolution-package-managers
https://unix.stackexchange.com/questions/5535/non-root-package-managers

* using pkgsrc
https://rundong.wordpress.com/2013/10/18/pkgsrc-my-favorite-non-root-package-manager-on-linux/

* install node js with homebrew!!
https://blog.teamtreehouse.com/install-node-js-npm-linux

* farmshare connections
https://srcc.stanford.edu/farmshare2/connecting

* undertand full stack nice diagrams *good* react node express
https://www.smashingmagazine.com/2016/03/server-side-rendering-react-node-express/

* cgi and node
http://www.cgi-node.org/
http://www.cgi-node.org/downloads
https://nodejs.org/download/

* node.js cgi-node
basically runs javascript, should have fastcgi though
https://stackoverflow.com/questions/5248769/node-js-webserver-with-cgi-support-open-source

* great forum discussion on cgi-node
https://news.ycombinator.com/item?id=8835564

* express js over fastcgi-node
https://stackoverflow.com/questions/23777920/use-expressjs-app-via-fastcgi

* apache proxy for node.js server
https://stackoverflow.com/questions/32605232/how-to-deploy-nodejs-app-on-php-apache-server
<VirtualHost example.com:*>
    ProxyPreserveHost On

    ProxyPass /api http://localhost:3000/
    ProxyPassReverse /api http://localhost:3000/

    ServerName localhost
</VirtualHost>

https://stackoverflow.com/questions/9831594/apache-and-node-js-on-the-same-server
Also has information about adding mod_proxy for apache
ProxyPass is great if you can fire up your own node.js webserver

* not useful since not using a proxy, only useful for local serving
https://atticuswhite.com/blog/apache-serving-nodejs/

* node.js vs nginx and apache
https://www.quora.com/When-using-node-js-do-you-still-need-Nginx-or-Apache

* sample php cgi
https://web.stanford.edu/~frankliu/cgi-bin/phpinfo.php

* telegram bot with node.js
https://www.youtube.com/watch?v=Te7HcRhwOI4

* apache and flask
https://stackoverflow.com/questions/31870244/apache-webserver-and-flask-app
http://flask.pocoo.org/docs/0.12/deploying/mod_wsgi/

* setting up lamp server from scratch! *good*
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-apache-mysql-and-python-lamp-server-without-frameworks-on-ubuntu-14-04

* alternatives to cgi and why cgi is bad
https://www.embedthis.com/blog/posts/stop-using-cgi/stop-using-cgi.html

* python wsgi servers *good*
has some great history about wsgi in general
https://blog.appdynamics.com/engineering/an-introduction-to-python-wsgi-servers-part-1/

* kernel modules
https://unix.stackexchange.com/questions/184877/how-to-list-all-loadable-kernel-modules
find /lib/modules/$(uname -r) -type f -name '*.ko'
find /lib/modules/$(uname -r) -type f -name '*.ko*'
ls /proc/modules
lsmod

* List apache modules
https://superuser.com/questions/284898/how-to-check-which-apache-modules-are-enabled-installed
apachectl -t -D DUMP_MODULES  # must be root
a2query -m
curl http://localhost/server-info
ls /etc/apache2/mods-enabled/
ls /etc/apache2/mods-available/

* hello world cgi python
https://web.stanford.edu/~frankliu/cgi-bin/hello.py

* mod_wsgi (web server gateway interface) apache and python
https://modwsgi.readthedocs.io/en/develop/user-guides/quick-installation-guide.html

* stanford webauth apache basicauth
limiting access
https://cs.stanford.edu/computing-guide/web-pages

* cgi-node
http://www.cgi-node.org/docs


* passing variable to python cgi script
https://www.google.com/search?ei=SRLMW4qgNKG90PEPj4ilsAI&q=how+to+pass+variables+to+python+cgi&oq=how+to+pass+variables+to+python+cgi&gs_l=psy-ab.3..33i22i29i30.15702.22871..23529...3.0..1.237.2677.37j0j1......0....1..gws-wiz.......0j0i71j35i39j0i67j0i131j0i20i263j35i304i39j0i13j0i22i30.Ei_8gCAXy_8
https://stackoverflow.com/questions/7687490/how-to-pass-variable-to-a-python-cgi-script
https://stackoverflow.com/questions/18669024/passing-variable-with-python-cgi
https://stackoverflow.com/questions/3582398/getting-http-get-arguments-in-python
https://stackoverflow.com/questions/5822280/passing-parameters-to-a-cgi-program-using-the-url-python

* python package for cgi development
https://github.com/agordon/cgi-tools
https://docs.python.org/2/library/cgi.html

* flask quickstart minimal
https://tedboy.github.io/flask/quickstart/quickstart1.html

* virtual env in python script and apache
https://stackoverflow.com/questions/27695501/use-virtualenv-in-python-script

Better way than virtualenv
http://benjamincongdon.me/blog/2017/02/19/A-Better-Way-to-Wrangle-Python-Environments/

* running virtual env python flask + apache
https://homes.cs.washington.edu/~yjzhang/notes/python_web.html
Tells me to point browser to the
[address]/url/to/app/app.cgi/.

* Deploy
https://web.stanford.edu/~frankliu/cgi-bin/deploy.cgi/wss


* Flask by example
https://realpython.com/flask-by-example-part-1-project-setup/

* django rabbitmq vue.js flask cgi
https://danidee10.github.io/blog/
https://danidee10.github.io/2016/10/26/flask-by-example-6.html

* Fast CGI and flask
http://flask.pocoo.org/docs/0.12/deploying/fastcgi/
https://www.google.com/search?q=executables+anaconda&oq=executables+anaconda&aqs=chrome..69i57.6750j0j7&sourceid=chrome&ie=UTF-8

* linuxbrew chicken
https://github.com/Linuxbrew/homebrew-core/blob/master/Formula/chicken.rb

* module is an alias

which module
module: 	 aliased to eval ` $LMOD_CMD csh  !*` ; eval `$LMOD_SETTARG_CMD -s csh`

* trek 2200
http://www.roadbikereview.com/product/latest-bikes/road-bike/trek/2200.html
DESCRIPTION

Frame Material: aluminum, carbon seat stays
Frame Angles: 73.8 head, 73.5 seat
Sizes: 50cm, 52cm, 54cm, 56cm, 58cm, 60cm, 63cm
Colors: Blue
Fork: Bontrager Race Carbon
Rear Shock: Not applicable
Brake Levers: Shimano Ultegra STI Dual Control
Handlebar: Bontrager Race
Stem: Bontrager Race
Headset: 1 1/8" threadless Cane Creek C1
Front Der: Shimano 105
Crankset: Shimano Ultegra, 39/53 teeth
Rear Der: Shimano Ultegra SS
Pedals: Shimano PD-M520 SPD
Tires: 700 x 25c Bontrager Race Lite

Most are three piece cranks 9/12 20tpi

* bitcoin course
https://www.coursera.org/learn/cryptocurrency/lecture/gFEJL/cryptographic-hash-functions

* WSL
Powershell (as admin)

Note you need to upgrade windows 10 in order to wsl

PS C:\Users\frank\Downloads> Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
PS C:\Users\frank\Downloads> Add-AppxPackage -Path ".\CanonicalGroupLimited.Ubuntu18.04onWindows_1804.2018.817.0_x64__79
rhkp1fndgsc.Appx"

Accessing windows /mnt/c

** Initializing
https://docs.microsoft.com/en-us/windows/wsl/initialize-distro

** xwindows
vcxsrv-64.1.20.1.3.installer.exe

** what works in wsl
https://blogs.msdn.microsoft.com/wsl/2017/04/11/testing-the-windows-subsystem-for-linux/

* Mevn mongo express vue node
https://medium.com/@anaida07/mevn-stack-application-part-1-3a27b61dcae0
https://medium.com/@anaida07/mevn-stack-application-part-2-2-9ebcf8a22753
https://www.packtpub.com/web-development/full-stack-web-development-vuejs-and-node
https://codeburst.io/inside-the-book-full-stack-web-development-with-vue-js-and-node-50638d4dcc6a

* Understanding how express works
https://www.sohamkamani.com/blog/2018/05/30/understanding-how-expressjs-works/
https://www.google.com/search?q=understanding+web+server+stack&tbm=isch&source=iu&ictx=1&fir=uUsaqqiHxa7PyM%253A%252CsdQvRkCBOEHnUM%252C_&usg=AI4_-kR_uAbqFySbRtuSrDHkMbF3P7mhDA&sa=X&ved=2ahUKEwjkl4q9_aXeAhWpHzQIHemUDrUQ9QEwDXoECAMQBA#imgrc=uUsaqqiHxa7PyM:
https://stackoverflow.com/questions/19411135/what-does-express-js-do-in-the-mean-stack
http://evanhahn.com/understanding-express/

* imagej
https://imagej.nih.gov/ij/developer/macro/functions.html
https://imagej.nih.gov/ij/docs/menus/analyze.html#manager
https://imagej.nih.gov/ij/developer/api/ij/plugin/filter/EDM.html

* eucledian distance
https://www.google.com/search?q=euclidean+distance+map&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjR-emZ5KbeAhVvHjQIHYHnAi4Q_AUIDigB&biw=1533&bih=770#imgrc=QUJLe9J37P81sM:
http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-analyst-toolbox/euclidean-distance.htm

* google drive
https://mail.google.com/mail/u/0/#search/sjg79%40stanford.edu/KtbxLwGrVJJzrrkSwBnHMxWfrGTSdTjxNV
https://drive.google.com/drive/folders/0ALvoJu8CZfkLUk9PVA
https://docs.google.com/spreadsheets/d/1K-Me9YfrVLxXZBY3E28QksIhVZDZ4S3x3K0th_cSuvI/edit#gid=1803918846
* imagej guide
https://imagej.nih.gov/ij/docs/guide/146-30.html

* deep learning papers
https://adeshpande3.github.io/The-9-Deep-Learning-Papers-You-Need-To-Know-About.html
https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf
https://www.learnopencv.com/understanding-alexnet/
https://www.quora.com/How-do-I-study-the-Deep-Learning-textbook-by-Ian-Goodfellow
https://www.quora.com/What-is-the-most-systematic-way-to-understand-Deep-Learning-algorithms/answer/Prasoon-Goyal
https://github.com/aymericdamien/TensorFlow-Examples
http://www.deeplearningbook.org/contents/ml.html

* unity 3d
https://unity3d.com/machine-learning
https://blogs.unity3d.com/2017/08/22/unity-ai-reinforcement-learning-with-q-learning/
https://www.youtube.com/watch?v=XvbaCDvSzzY
https://medium.mybridge.co/30-amazing-machine-learning-projects-for-the-past-year-v-2018-b853b8621ac7
https://www.youtube.com/watch?v=bqsfkGbBU6k
https://docs.unity3d.com/Manual/30_search.html?q=ai+agents
https://www.amazon.com/Quick-Guide-Artificial-Intelligence-Unity-ebook/dp/B075CNMVQM
https://unity3d.com/programming-in-unity


* medical school cloud infrastructure
http://med.stanford.edu/irt/infrastructure/cloud-infrastructure.html
https://stanford.service-now.com/services?id=search&t=&portal=&titleStr=Describe%20your%20issue&q=Request%20to%20be%20part%20of%20the%20conversation%20as%20a%20single-channel%20guest%20into%20the%20IRT%20Slack%20instance%20in%20the%20%23googlecloudplatform%20channel&search=
https://stanford.service-now.com/it_services?id=kb_article&sys_id=2f5fbdb8db7cdb004a8f75d88c96198f

* stanford slack
https://stanford.enterprise.slack.com/
https://susciclu.slack.com/messages/C92TK7B8X/
https://susciclu.slack.com/messages/C8CNSTB88/

* google cloud genomics bigquery cloud storage
https://www.google.com/search?q=bigquery+genomics+cloud+storage&oq=bigquery+genomics+cloud+storage&aqs=chrome..69i57.7028j0j7&sourceid=chrome&ie=UTF-8

* firebase cloud firestore
https://medium.com/@hiranya911/firebase-developing-an-app-engine-service-with-python-and-cloud-firestore-1640f92e14f4
https://firebase.google.com/docs/firestore/rtdb-vs-firestore

* free tier, console developer
https://www.google.com/search?ei=_c3UW4qbJJK40PEPkrmS4Aw&q=google+free+tier+without+free+trial&oq=google+free+tier+without+free+trial&gs_l=psy-ab.3...6780.7506..7657...0.0..0.78.500.7......0....1..gws-wiz.......0i71.zuKgZ20KCt8
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&duration=PT1H
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&angularJsUrl=%2Fapis%2Fdashboard%3Fproject%3Dapi-project-950844133145&authuser=1&pli=1
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&angularJsUrl=%2Fapis%2Fdashboard%3Fproject%3Dapi-project-950844133145&authuser=1&pli=1
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&angularJsUrl=%2Fapis%2Fdashboard%3Fproject%3Dapi-project-950844133145&authuser=1
https://console.developers.google.com/apis/library/compute.googleapis.com?filter=category:compute&id=a08439d8-80d6-43f1-af2e-6878251f018d&project=api-project-950844133145&authuser=1
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&duration=PT1H

* sheets api
https://console.developers.google.com/apis/library/sheets.googleapis.com?id=739c20c5-5641-41e8-a938-e55ddc082ad1&project=api-project-950844133145&authuser=1
https://developers.google.com/sheets/api/guides/create
https://stackoverflow.com/questions/38972452/python-google-spread-sheet-update-api-does-not-work-with-403
https://drive.google.com/drive/u/0/folders/1mj-U1j1jpLwHOa2L35hmYnOE9mESX-V2
https://docs.google.com/spreadsheets/d/1sBFa0BN7Q1xyhDAfa4h5KSMVlicwrxnFPn0OuZSq-rI/edit#gid=0

* apps script and sheets
https://developers.google.com/apps-script/overview
https://developers.google.com/sheets/api/guides/concepts#spreadsheet_id
https://developers.google.com/apps-script/guides/sheets/functions
https://developers.google.com/apps-script/guides/services/
https://developers.google.com/apps-script/reference/spreadsheet/

* adding ui inside sheets
https://stackoverflow.com/questions/6876819/how-do-you-add-ui-inside-cells-in-a-google-spreadsheet-using-app-script
https://en.support.wordpress.com/google-docs/

* vue vs react
https://deliciousbrains.com/react-vs-vue-2018/
has good comments re vue cli - note most comments in vue's favor

* vue cli
https://forum.vuejs.org/t/migration-to-vue-cli-3-now/33404
https://cli.vuejs.org/guide/

* native vue
https://vuido.mimec.org/usage
https://electronjs.org/
https://vuido.mimec.org/

* pointer for functions
 arr               // arr
 arr []            // is an array (so index it)
 * arr []          // of pointers (so dereference them)
 (* arr [])()      // to functions taking nothing (so call them with ())
 void (* arr [])() // returning void

 so your answer is

 void (* arr [])() = {};

 But naturally, this is a bad practice, just use typedefs :)

 Extra: Wonder how to declare an array of 3 pointers to functions
 taking int and returning a pointer to an array of 4 pointers to
 functions taking double and returning char? (how cool is that, huh?
 :))

 arr //arr
 arr [3] //is an array of 3 (index it)
 * arr [3] //pointers
 (* arr [3])(int) //to functions taking int (call it) and
 *(* arr [3])(int) //returning a pointer (dereference it)
 (*(* arr [3])(int))[4] //to an array of 4
 *(*(* arr [3])(int))[4] //pointers
 (*(*(* arr [3])(int))[4])(double) //to functions taking double and
 char (*(*(* arr [3])(int))[4])(double) //returning char

* fullstack vue code
https://mega.nz/#F!fVsGwJZL!e1tjZX8qwINZ3raPOEXNfQ

* nice free tutorials
https://discuss.freetutorials.us/t/wes-bos-fullstack-advanced-react-graphql-5-26-gb-download-free/31575/18

* vue mode
I use vue-html-mode, vue-mode, web-mode, js2-mode and tern (and lots
of other things like emmet-mode, coffee-mode, projectile, rainbow-mode
etc)

I am actually using vue-html-mode, vue-mode, web-mode, js2-mode and
tern as well but it's just coming out like a gray lumpy gravy.

Here is my complete init file ... you can search the needed parts
(it's small, but there are comment headers for each major mode so you
can search by HTML, Javascript etc).

https://pastebin.com/HqntzaVc

Share
Report
Save

* setting up emacs for javascript

* google cloud
┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                                  Components                                                 │
├───────────────┬──────────────────────────────────────────────────────┬──────────────────────────┬───────────┤
│     Status    │                         Name                         │            ID            │    Size   │
├───────────────┼──────────────────────────────────────────────────────┼──────────────────────────┼───────────┤
│ Not Installed │ App Engine Go Extensions                             │ app-engine-go            │ 153.3 MiB │
│ Not Installed │ Cloud Bigtable Command Line Tool                     │ cbt                      │   6.4 MiB │
│ Not Installed │ Cloud Bigtable Emulator                              │ bigtable                 │   4.3 MiB │
│ Not Installed │ Cloud Datalab Command Line Tool                      │ datalab                  │   < 1 MiB │
│ Not Installed │ Cloud Datastore Emulator                             │ cloud-datastore-emulator │  17.7 MiB │
│ Not Installed │ Cloud Datastore Emulator (Legacy)                    │ gcd-emulator             │  38.1 MiB │
│ Not Installed │ Cloud Pub/Sub Emulator                               │ pubsub-emulator          │  33.4 MiB │
│ Not Installed │ Cloud SQL Proxy                                      │ cloud_sql_proxy          │   3.8 MiB │
│ Not Installed │ Emulator Reverse Proxy                               │ emulator-reverse-proxy   │  14.5 MiB │
│ Not Installed │ Google Cloud Build Local Builder                     │ cloud-build-local        │   6.0 MiB │
│ Not Installed │ Google Container Local Builder                       │ container-builder-local  │   4.5 MiB │
│ Not Installed │ Google Container Registry's Docker credential helper │ docker-credential-gcr    │   1.8 MiB │
│ Not Installed │ gcloud Alpha Commands                                │ alpha                    │   < 1 MiB │
│ Not Installed │ gcloud Beta Commands                                 │ beta                     │   < 1 MiB │
│ Not Installed │ gcloud app Java Extensions                           │ app-engine-java          │ 108.8 MiB │
│ Not Installed │ gcloud app PHP Extensions                            │ app-engine-php           │           │
│ Not Installed │ gcloud app Python Extensions                         │ app-engine-python        │   6.2 MiB │
│ Not Installed │ gcloud app Python Extensions (Extra Libraries)       │ app-engine-python-extras │  28.5 MiB │
│ Not Installed │ kubectl                                              │ kubectl                  │   < 1 MiB │
│ Installed     │ BigQuery Command Line Tool                           │ bq                       │   < 1 MiB │
│ Installed     │ Cloud SDK Core Libraries                             │ core                     │   8.7 MiB │
│ Installed     │ Cloud Storage Command Line Tool                      │ gsutil                   │   3.5 MiB │
└───────────────┴──────────────────────────────────────────────────────┴──────────────────────────┴───────────┘

* configuring computer zone
[gcloud config set compute/zone NAME].
Did not print [6] options.
Too many options [56]. Enter "list" at prompt to print choices fully.
Please enter numeric choice or text value (must exactly match list
item):  11

Your project default Compute Engine zone has been set to [us-west1-b].
You can change it by running [gcloud config set compute/zone NAME].

Your project default Compute Engine region has been set to [us-west1].
You can change it by running [gcloud config set compute/region NAME].

Created a default .boto configuration file at [/home/adam/.boto]. See this file and
[https://cloud.google.com/storage/docs/gsutil/commands/config] for more
information about configuring Google Cloud Storage.
Your Google Cloud SDK is configured and ready to use!

- Commands that require authentication will use frankliu@stanford.edu by default
- Commands will reference project `gbsc-gcp-lab-gssc` by default
- Compute Engine commands will use region `us-west1` by default
- Compute Engine commands will use zone `us-west1-b` by default

Run `gcloud help config` to learn how to change individual settings

This gcloud configuration is called [default]. You can create additional configurations if you work with multiple accounts and/or projects.
Run `gcloud topic configurations` to learn more.

Some things to try next:

- Run `gcloud --help` to see the Cloud Platform services you can interact with. And run `gcloud help COMMAND` to get help on any gcloud command.
- Run `gcloud topic -h` to learn about advanced features of the SDK like arg files and output formatting

* hello world app engine
git clone https://github.com/GoogleCloudPlatform/nodejs-docs-samples
cd nodejs-docs-samples/appengine/hello-world/flexible
npm install
npm start
gcloud app deploy
gcloud app browse
# To view your application in the web browser run:
# $ gcloud app browse

* gcloud logs
You can stream logs from the command line by running:
$ gcloud app logs tail -s default

* gcloud update
Updates are available for some Cloud SDK components.  To install them,
please run:
  $ gcloud components update

* How to choose a google cloud engine (standard flexible compute)
https://cloud.google.com/appengine/docs/the-appengine-environments

* nodejs docker
https://github.com/GoogleCloudPlatform/nodejs-docker

* you can specify your own runtime
https://cloud.google.com/appengine/docs/flexible/custom-runtimes/
https://cloud.google.com/appengine/docs/flexible/nodejs/runtime

* gcloud get project name
gcloud config list --format 'value(core.project)'
gbsc-gcp-lab-gssc

* gcloud help page
gcloud topic formats

* project nane
export PROJECT_ID=$(gcloud config list --format '(value(core.project)')
export PROJECT_ID=$(gcloud config get-vale project)
Your active configuration is: [default]

gcloud info | awk '/project:/ {print $2}' | tr -d '[]'

* how-to
https://cloud.google.com/appengine/docs/flexible/custom-runtimes/how-to
buidling a custom runtime
configuring your app
testing and deploying your application
debugging an instance (connecting to an instance with ssh)

* Understanding flow of html
https://stackoverflow.com/questions/49843822/connecting-a-python-backend-and-vue-js-frontend-on-google-app-engine

Strictly speaking, your Python will not directly "load your app".

First, at the risk of unneeded explaining, there's the important concept of where code resides vs where code executes. Your VueJS code resides on the server in a static file but executes in the client / browser. Q: How does it get from the server to the browser to execute? A: The client must send a request to the server to provide it. Q: What would cause the browser to send this request? A: Instructions in other code sent to it, most probably a <script> tag in HTML.

So, the flow goes something like this (may vary for you depending on details not provided):

Browser sends request to server (GAE) for HTML, such as the home page
Server (GAE) responds with HTML
This HTML may be dynamically created by Python or may be a static file.
This HTML contains tags to instruct the browser to request more files: images, CSS, JS.
This HTML should contain a <script> tag to request your VueJS code.
Browser receives the HTML and processes it, including the <script> tag for your VueJS code.
Browser sends request to server for the VueJS code.
Server (GAE) responds with the static file containing the VueJS code.
Browser receives the file containing VueJS codes, runs it, and your VueJS is now loaded & running!
As your VueJS runs, it may send AJAX requests to the server (GAE) to get data and/or more code.
Your VueJS code must reside in a static file on the server. To the server (Python), this static file is just a meaningless bag-of-bytes (if there's a syntax error in the code it won't be found until it executes client-side).

How do you get these statics files into GAE so they are available when the browser requests it? You probably already got this (for CSS, images), but just in case you don't, see this link: Server Static Files for details on setting this up.

* community tutorials

https://cloud.google.com/appengine/docs/standard/nodejs/tutorials

* bash verify target of symbolic link
https://unix.stackexchange.com/questions/192294/how-to-verify-the-target-of-a-symbolic-link-points-toward-a-particular-path
if [ "$(readlink -- "$alink")" == /home/fyliu/.ssh/config.noproxy ];
then
fi

* stanford cees rfc head nodes
https://www.google.com/search?q=cees+rfc+head+nodes+stanford&oq=cees+rfc+head+nodes+stanford&aqs=chrome..69i57.6029j0j7&sourceid=chrome&ie=UTF-8

* gcloud you are not authenticated
https://cloud.google.com/sdk/auth_success

* gcloud nodejs-docs-samples
https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/master/appengine/README.md
# Google App Engine Node.js Samples

These are samples for using [Node.js][nodejs] on
[Google App Engine][appengine]. Many of these samples
are referenced from the documentation on [cloud.google.com][appengine].

There are also samples [submitted by the community][community_samples].

See our other [Google Cloud Platform GitHub repositories](/GoogleCloudPlatform)
for sample applications and scaffolding for other frameworks and use cases.

-* [Run Locally](#run-locally)
-* [Deploying](#deploying)
-* [Official samples](#official-samples)
-* [Community samples](#community-samples)

## Run Locally

Some samples have specific instructions. If there is a `README.md` file in the
sample folder, please refer to it for any additional steps required to run the
sample.

The App Engine Node.js samples typically that you do the following:

1.  [Setup your environment for Node.js developement][nodejs_dev].
1.  [Install the Google Cloud SDK][sdk].
1.  Acquire local credentials for authenticating with Google Cloud Platform APIs:

        gcloud auth application-default login

1.  Clone this repo:

        git clone https://github.com/GoogleCloudPlatform/nodejs-docs-samples.git

1.  Choose a sample:

        cd appengine/sample-folder/

1.  Install depedencies using `npm` or `yarn`:

        npm install

    or

        yarn install

1.  Run the sample with `npm` or `yarn` (See the sample's `README.md` file for
    any additional setup):

        npm start

    or

        yarn start

1.  Visit the application at [http://localhost:8080][].

## Deploying

Some samples may have special deployment instructions.
Refer to the `README.md` file in the sample folder.

Many samples in this folder can be deployed to both App Engine Node.js standard
environment and flexible environment. Those samples come with two different
App Engine configuration files: `app.flexible.yaml` for flexible environment,
and `app.standard.yaml` for standard environment.

Samples with one single configuration file, `app.yaml`, can only be deployed
to one of the two environments. See the `README.md` files for these samples
for more information.

Generally speaking, to deploy a sample application:

1.  Use the [Google Cloud Console][console] to create a Google Cloud Platform
    project.
1.  [Enable billing][billing] for your project.

1.  Use the Cloud SDK to deploy your app.

    For samples with two configuration files (`app.flexible.yaml` and
    `app.standard.yaml`), if you plan to use App Engine Node.js Standard
    Environment, run

        gcloud app deploy app.standard.yaml

    To deploy to App Engine Node.js Flexible Environment, run

        gcloud app deploy app.flexible.yaml

    For samples with one configuration file (`app.yaml`), run

        gcloud app deploy

    to deploy the app to its compatible environment.

    Note: If there is a `yarn.lock` file then `yarn install` will be used during
    deployment. Delete the `yarn.lock` file to fall back to `npm install`.

1.  View your deployed application at `https://YOUR_PROJECT_ID.appspot.com`.

## Official samples

View the [Official App Engine Node.js samples][official_samples].

## Community samples

View the [Community-contributed App Engine Node.js samples][community_samples].

[nodejs]: https://nodejs.org/
[appengine]: https://cloud.google.com/appengine/
[nodejs_dev]: https://cloud.google.com/community/tutorials/how-to-prepare-a-nodejs-dev-environment
[sdk]: https://cloud.google.com/sdk/
[console]: https://console.cloud.google.com
[billing]: https://support.google.com/cloud/answer/6293499#enable-billing
[official_samples]: https://github.com/GoogleCloudPlatform/nodejs-docs-samples/tree/master/appengine
[community_samples]: https://cloud.google.com/community/tutorials/?q=%22Node.js%22

* deploy mongodb on compute engine
https://cloud.google.com/solutions/deploy-mongodb
mostly about sharding not a lot of instruction

List of tutorials
https://cloud.google.com/docs/tutorials#mongodb

This is a good tutorial
https://cloud.google.com/community/tutorials/mongodb-atlas-appengineflex-nodejs-app

This goes a little further than hello world
talks about uuid and redeploying
https://codelabs.developers.google.com/codelabs/cloud-app-engine-node/index.html?index=..%2F..%2Findex#1

Simple tutorial express and mongodb
https://cloud.google.com/community/tutorials/nodejs-mongodb-on-appengine

* mongodb gcloud
https://cloud.google.com/community/tutorials/nodejs-mongodb-on-appengine

---
title: Connect to MongoDB from Node.js on Google App Engine Flexible Environment
description: Learn how to connect to MongoDB from a Node.js app running on Google App Engine flexible environment.
author: jmdobry
tags: App Engine, Node.js, MongoDB
date_published: 2017-11-02
---

## MongoDB

> [MongoDB][mongo] is a document database with the scalability and flexibility
> that you want with the querying and indexing that you need
>
> – mongodb.com

You can check out [Node.js and Google Cloud Platform][nodejs-gcp] to get an
overview of Node.js itself and learn ways to run Node.js apps on Google Cloud
Platform.

## Prerequisites

1. Create a project in the [Google Cloud Platform Console](https://console.cloud.google.com/).
1. Enable billing for your project.
1. Install the [Google Cloud SDK](/sdk/).
1. [Prepare your environment for Node.js development][nodejs]

### Create a MongoDB database

There are multiple options for creating a new MongoDB database. For example:

- Create a Google Compute Engine virtual machine with [MongoDB pre-installed](/launcher/?q=mongodb).
- Create a MongoDB instance with [MongoDB Atlas on GCP](https://www.mongodb.com/cloud/atlas/mongodb-google-cloud).
- Use [mLab](https://mlab.com/google/) to create a free MongoDB deployment on Google Cloud Platform.

## Prepare the app

1. Initialize a `package.json` file with the following command:

        npm init

1. Install dependencies:

        npm install --save mongodb nconf

1. Create a `server.js` file with the following contents:

        'use strict';

        const mongodb = require('mongodb');
        const http = require('http');
        const nconf = require('nconf');

        // Read in keys and secrets. Using nconf use can set secrets via
        // environment variables, command-line arguments, or a keys.json file.
        nconf.argv().env().file('keys.json');

        // Connect to a MongoDB server provisioned over at
        // MongoLab.  See the README for more info.

        const user = nconf.get('mongoUser');
        const pass = nconf.get('mongoPass');
        const host = nconf.get('mongoHost');
        const port = nconf.get('mongoPort');

        let uri = `mongodb://${user}:${pass}@${host}:${port}`;
        if (nconf.get('mongoDatabase')) {
          uri = `${uri}/${nconf.get('mongoDatabase')}`;
        }
        console.log(uri);

        mongodb.MongoClient.connect(uri, (err, db) => {
          if (err) {
            throw err;
          }

          // Create a simple little server.
          http.createServer((req, res) => {
            if (req.url === '/_ah/health') {
              res.writeHead(200, {
                'Content-Type': 'text/plain'
              });
              res.write('OK');
              res.end();
              return;
            }
            // Track every IP that has visited this site
            const collection = db.collection('IPs');

            const ip = {
              address: req.connection.remoteAddress
            };

            collection.insert(ip, (err) => {
              if (err) {
                throw err;
              }

              // push out a range
              let iplist = '';
              collection.find().toArray((err, data) => {
                if (err) {
                  throw err;
                }
                data.forEach((ip) => {
                  iplist += `${ip.address}; `;
                });

                res.writeHead(200, {
                  'Content-Type': 'text/plain'
                });
                res.write('IPs:\n');
                res.end(iplist);
              });
            });
          }).listen(process.env.PORT || 8080, () => {
            console.log('started web process');
          });
        });

1.  Create a `keys.json` file with the following content, replacing the
    variables with your own values:

        {
          "mongoHost": "YOUR_MONGO_HOST",
          "mongoPort": "YOUR_MONGO_PORT",
          "mongoDatabase": "YOUR_MONGO_DB",
          "mongoUser": "YOUR_MONGO_USERNAME",
          "mongoPass": "YOUR_MONGO_PASSWORD"
        }

    Do not check your credentials into source control. Create a `.gitignore`
    file if you don't have one, and add `keys.json` to it.

## Run the app

1.  Run the app locally:

        npm start

1.  Visit [http://localhost:8080](http://localhost:8080) to see the app.

## Deploy the app

1.  Create an `app.yaml` file with the following content:

        runtime: nodejs
        env: flex

1.  Run the following command to deploy your app:

        gcloud app deploy

1.  View the deployed app:

        gcloud app browse

[mongo]: https://www.mongodb.com/
[nodejs-gcp]: running-nodejs-on-google-cloud
[nodejs]: /nodejs/docs/setup

* mongodb gcloud

https://cloud.google.com/community/tutorials/mongodb-atlas-appengineflex-nodejs-app

---
title: Hello World App - MongoDB Atlas and App Engine Flex - NodeJS
description: Learn how to build Node.js application with Google App Engine flexible environment and MongoDB Atlas.
author: arajwade,smithkh
tags: App Engine, Node.js, MongoDB Atlas
date_published: 2018-06-25
---

## Overview

In this tutorial, you will be building a "Hello World" application using Node.js
with Google App Engine flexible environment for our frontend and a MongoDB Atlas
multi-regional cluster on Google Cloud Platform as our primary database.

### Technical Complecity

Beginner

### Duration

45 Minutes

### Objectives

1.  Create and configure MongoDB Atlas multi-regional cluster on GCP.
2.  Configuring our Google Cloud Platform Account.
3.  Configure a Node.js application on a GCE Debian VM on GCP.
4.  Push your application to App Engine Flex on GCP.
5.  Visit our new application from any web-enabled client terminal, including
    mobile devices.

## Part 1: Configuring the MongoDB Atlas

1.  Create a free account on MongoDB Atlas on www.mongodb.com/cloud/atlas

    Click on "Login" at the top of the page:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image18.png)

2.  If you do not already have a MongoDB Atlas account, register for new account
    at the bottom of the page. If you do, skip to Step 5.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image3.png)

3.  Enter necessary details and click "Continue":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image12.png)

4.  Once on the MongoDB Atlas Homepage, select "Build a New Cluster":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image15.png)

5.  Create New Cluster by selecting Google Cloud Platform as a "Cloud Provider".
    Next select the region where you want to place your Atlas cluster. Ideally,
    your cluster will be located close to your end user for lower latency. Note
    that we can select a free tier region in your area of choice, as noted by
    the "Free Tier Available" icon. This is a no-cost option to get started.
    However, since we are assuming our end users will span across the globe, we
    want our Atlas cluster to be multi-regional. To enable a multi-regional
    cluster, we will need to select a M10 or larger cluster size. So for now,
    for our use case, let’s assume our primary end users for our application
    will be based in the US and a smaller percentage based in the UK and
    Australia. As such, we will select our primary region to be in North
    America, based in Iowa (us-central1).

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image45.png)

6.  Next, to enable multiple regions, lets configure our cluster size under
    "Cluster Tier". Select "M10" under "Dedicated Development Clusters"
    subheading since this is the minimal size to move forward for
    multiple-regions.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image11.png)

7.  Now that we selected a M10 cluster, let's go back to "Cloud Provider &
    Region" and toggle the option to "Configure clusters across multiple
    regions" from "No" to "Yes". Once we enable this we will see more options.
    You will see your previously selected region as "Preferred" under "Node
    Type". Since for our use-case we will also have some users in the UK and
    Australia, we want to take into the considering the distance between our
    primary cluster in the US and enable lower latency for better read
    performance. As such, we will add a Read-only replica in London
    (europe-west2) and Sydney (australia-southeast1). Under the subheading
    "Deploy read-only replicas", select "Add a node" and add these two regions
    with 1 node each.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image27.png)

8.  We can skip the section "Additional settings" by clicking the "NEXT:
    CLUSTER NAME" button since we will keep the default settings.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image35.png)

9.  Under "'Cluster Name', provide a cluster Name." For this demo, we will keep
    the default of "Cluster0". Click on "Create Cluster" button at the bottom of
    the page.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image38.png)

10.  Our cluster is spinning up...

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image36.png)

11. While this spins up, let's click on "Security" tab and then click on
    "Add New User".

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image22.png)

12. Leave the default user as of "admin" and select a secure password. Record
    your user name and password in a safe location for reference later. Under
    "User Privileges", select "Atlas admin" and click on the "Add User" button
    to complete this section.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image16.png)

13.  Once done, we will see screen similar to this...

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image32.png)

14. Under Security tab, select "IP Whitelist" and click on "Add IP Address".

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image26.png)

15. Select "Allow Access from Anywhere" for the purpose of this demo and click
    on "Confirm".  Note:  When actually putting something into production, you
    will want to narrow the scope of where your database can be accessed and
    specify a specific IP address/CIDR block.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image20.png)

16. Go to "Overview" tab and click on "Connect" button.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image42.png)

17. A window will open. Select "Connect Your Application"

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image19.png)

18. Click on "I am using driver 3.4 or earlier" and copy the connection string
    and keep it in a text file. We will be using it in our Node.js application
    to connect to MongoDB Atlas in Part 2 of this document. Close the pop-up
    dialogue

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image40.png)

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image41.png)

## Part 2: Configuring our Google Cloud Platform Account

1.  Go to cloud.google.com and login with your Google account. If you don't have
    a Google account, please create a free trial account by following
    instructions at this [link](https://console.cloud.google.com/freetrial).

2.  If not already there, go to https://console.cloud.google.com/

3.  Create a new project, by selecting the following dropdown in the top left:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image37.png)

4.  A new window will pop up.  In it, select "New Project" in the top left:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image21.png)

5.  Give your Hello World app a new project name and click the "Create" button:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image13.png)

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image46.png)

6.  After your new project is done being created. Go back to the dropdown in
    Step 3, select your new project name:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image4.png)

7.  When the right project is selected, the name will change to reflect this in
    the dropdown in the top left of your console:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image23.png)

8.  Next, let's enable the specific APIs we will need:. Click on
    "APIs & Services" in the left toolbar:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image10.png)

9.  Then select, "ENABLE APIS AND SERVICES":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image30.png)

10. Select both "Google App Engine Flexible Environment" and "Google App Engine
    Admin API", then select "Enable":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image39.png)

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image44.png)

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image8.png)

11. Next, lets enable App Engine for our specific language. Use the search bar
    in the console and type in "App Engine". Select "App Engine" from the list
    of options

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image31.png)

12. In the blue box on the left, choose the "Select a language" dropdown:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image29.png)

13. Choose Node.js:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image2.png)

14. Select a region where the majority of your users will be, then select
    "Next":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image5.png)

15. Close out of the optional tutorial on the right side, by selecting "Cancel
    Tutorial" in the bottom right:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image25.png)

## Part 3: Configuring and deploying our Node.js application

1. Create a Debian Linux GCE VM instance using the instructions given [here](https://cloud.google.com/compute/docs/quickstart-linux).

    NOTE: When creating your instance, please be sure to enable "Allow full
    access to all Cloud APIs" under "Identity and API access":

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image33.png)

2. After your instance is created, SSH to your instance by clicking on the SSH button of your instance.

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image24.png)

3. You should see a Linux window similar to this open...

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image6.png)

4.  Configure your instance for Node.js and MongoDB client by executing
    following comments.

        sudo apt-get update

        curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

        sudo apt-get install -y nodejs

        sudo apt-get install -y build-essential

        npm install nconf

5.  Preparing the app - Initialize a package.json file with the following
    command:

        npm init

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image47.png)

    For "package name", enter: "test"

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image34.png)

    - For "version", enter: "1.0.0"
    - For "description", leave blank
    - For "entry point", enter: "server.js"
    - For "test command", leave blank
    - For "git repository", leave blank
    - For "keywords", leave blank
    - For "author", leave blank
    - For "license", leave blank

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image7.png)

    When done, you should see something similar to this...

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image14.png)

    Enter "yes" and press enter

6.  Install dependencies:

        npm install mongodb@2.2.33 --save

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image17.png)

7.  Create a `server.js` file with the following contents by using command.


        nano server.js

    Copy the given code into the Nano editor and save the file using Ctrl + X.
    NOTE: See the highlighted section where you need to insert your own Atlas
    Connection string.

        'use strict';

        const mongodb = require('mongodb');
        const http = require('http');
        const nconf = require('nconf');
        let uri = ` PASTE YOUR MONGODB ATLAS CONNECTION STRING HERE `;
        if (nconf.get('mongoDatabase')) {
          uri = `${uri}/${nconf.get('mongoDatabase')}`;
        }
        console.log(uri);

        mongodb.MongoClient.connect(uri, (err, db) => {
          if (err) {
            throw err;
          }

          // Create a simple little server.
          http.createServer((req, res) => {
            if (req.url === '/_ah/health') {
              res.writeHead(200, {
                'Content-Type': 'text/plain'
              });
              res.write('OK');
              res.end();
              return;
            }


            const collection = db.collection('Messages');
            var datetime = new Date();
            const msg = {
              msgDescription: '\nHello World received on ' + datetime
            };

            collection.insert(msg, (err) => {
              if (err) {
                throw err;
              }

              // push out a range
              let msglist = '';
              collection.find().toArray((err, data) => {
                if (err) {
                  throw err;
                }
                data.forEach((msg) => {
                  msglist += `${msg.msgDescription}; `;
                });

                res.writeHead(200, {
                  'Content-Type': 'text/plain'
                });
        res.write('Messages received so far:\n');
                res.end(msglist);
              });
            });
          }).listen(process.env.PORT || 8080, () => {
            console.log('started web process');
          });
        });

    1.  Enter "Exit" to leave
    1.  On prompt to save, enter "Y"
    1.  Keep same file name, Hit Enter

8.  Running our app - Run the app locally by running the following command:

        npm start

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image43.png)

9.  Open another instance of SSH session by repeating the steps listed in X.2
    in the cloud console and run following command

        curl localhost:8080

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image9.png)

## Part 4: Push our application to App Engine Flex on GCP

Deploying the app to App Engine Flex

1.  Create an app.yaml file by running the following command:

        nano app.yaml

2.  Add following content to to app.yaml file by running the following command:

        runtime: nodejs
        env: flex

3.  Run the following command to deploy your app by running the following command:

        gcloud app deploy

4.  View the deployed app by running the following command:

        gcloud app browse

## Part 5: Visit our new application from any web-enabled client terminal; including mobile devices.

1.  Retrieve your external URL from the output of gcloud app browse command:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image28.png)

2.  Use a web-enabled client terminal to visit your new "Hello World"
    application using the external  URL in the previous step. You should see
    webpage showing screen similar to this:

    ![image](https://storage.googleapis.com/gcp-community/tutorials/mongodb-atlas-appengineflex-nodejs-app/image1.png)

* bash adding numbers
"$(($num1+$num2))"

* bash variable assignment parameter expansion
${parameter:-word}
|                    | parameter        |              |             |
|                    | set and not null | set but null | unset       |
| ${parameter:-word} | parameter        | word         | word        |
| ${parameter-word}  | parameter        | null         | word        |
| ${parameter:=word} | parameter        | word         | assign word |
| ${parameter=word}  | parameter        | null         | assign word |
| ${parameter:?word} | parameter        | error, exit  | error, exit |
| ${parameter?word}  | parameter        | sub null     | error, exit |
| ${parameter:+word} | word             | sub null     | sub null    |
| ${parameter+word}  | word             | sub word     | sub null    |

* nix-setup-user
Set user configuration
multi-user mode for Nix
https://nixos.org/releases/nix/nix-1.8/manual/

Dbus launch problems
https://github.com/moby/moby/issues/34175

* mongodb tutorials
- There are two mongodb tutorials slightly different from one another
https://cloud.google.com/community/tutorials/nodejs-mongodb-on-appengine
https://cloud.google.com/community/tutorials/nodejs-mongodb-on-appengine
https://cloud.google.com/community/tutorials/mongodb-atlas-appengineflex-nodejs-app
https://cloud.google.com/community/tutorials/mongodb-atlas-appengineflex-nodejs-app

* mongodb node.js driver api
http://mongodb.github.io/node-mongodb-native/2.2/api/Db.html#db

* mongodb clusters security enterprise security
https://cloud.mongodb.com/v2/5bdcb1a2014b76b6fa656c9c#clusters/security/enterpriseSecurity

* project's cluster
https://cloud.mongodb.com/v2/5bdcb1a2014b76b6fa656c9c#clusters

* docs for atlas
https://docs.atlas.mongodb.com/

* query the database
https://cloud.mongodb.com/v2/5bdcb1a2014b76b6fa656c9c#metrics/replicaSet/5bdcb23139ee1baceea159cc/explorer/test/IPs/find

* ubuntu disable scrensaver/lock
https://askubuntu.com/questions/177348/how-do-i-disable-the-screensaver-lock

* sudo without password
https://askubuntu.com/questions/147241/execute-sudo-without-password

* joe editor
https://joe-editor.sourceforge.io/4.5/man.html
^k x to exit editor

* gcloud flex runtimes
https://cloud.google.com/appengine/docs/flexible/custom-runtimes/
* gcloud debugging an instance
https://cloud.google.com/appengine/docs/flexible/custom-runtimes/debugging-an-instance
* gcloud tutorials
node.js "app engine standard"


* setting emacs for javascript
https://emacs.cafe/emacs/javascript/setup/2017/04/23/emacs-setup-javascript.html
https://emacs.cafe/emacs/javascript/setup/2017/05/09/emacs-setup-javascript-2.html
http://i.imgur.com/jEwgPsd.gif
https://www.reddit.com/r/emacs/comments/7w0ox0/tide_or_tern/
https://www.reddit.com/r/vuejs/comments/7dg1nb/how_do_you_set_up_emacs_to_develop_with_vue/
http://ternjs.net/doc/manual.html#emacs
https://github.com/AdamNiederer/vue-mode

* vue cli
https://flaviocopes.com/vue-cli/

* Free tutorials!!
https://discuss.freetutorials.us/top
** firebase and angular 5
https://discuss.freetutorials.us/t/skillshare-angular-5-and-firebase-building-real-world-app-features-2-21-gb-download-free/31635
** vue js master class
https://discuss.freetutorials.us/t/vueschool-the-vue-js-master-class-3-92-gb-download-free/31574/7
** fullstack.io react
https://discuss.freetutorials.us/t/ebook-fullstack-io-react-book-r36-july-2018-epub-pdf-code/13885
Saw a couple of requests for this book and people trying to find a newer version & code.

Decided to reupload.
Fullstack React: The Complete Guide to React and Friends
about the book: https://dereferer.me/?ohpy-l34wVRRw2Rj643r5Rx0Ez0090dlbg4BlNWPjJAwP7o-G 627

link (Base64):
aHR0cHM6Ly9tZWdhLm56LyNGIU9ZVWxrWXFCIU1xa0F0V1NVNGFaNW0zQlZkZEtyamc=

* vueschool.io
https://vueschool.io/plans

* fullstack.io/vue
https://www.fullstack.io/vue/

* complete javascript course
https://www.udemy.com/the-complete-javascript-course/
https://medium.com/codingthesmartway-com-blog/top-3-javascript-online-courses-f06acd71eb90
https://www.udemy.com/the-complete-javascript-course/?pmtag=FULLMUDEMAY&ranMID=39197&ranEAID=a1o1REVAqJg&ranSiteID=a1o1REVAqJg-j5gKmRtC35kaSaDGj7ubhw&siteID=a1o1REVAqJg-j5gKmRtC35kaSaDGj7ubhw&LSNPUBID=a1o1REVAqJg

* coding javascript app from scratch no frameworks
https://medium.com/codingthesmartway-com-blog/pure-javascript-building-a-real-world-application-from-scratch-5213591cfcd6

* init.js
https://www.toptal.com/javascript/guide-to-full-stack-javascript-initjs
Good introduction to full stack using nodejs and javascript

* printing to console apps script
Browser.msgBox('message', Browser.Buttons.OK_CANCEL);
Logger.log()
scriptlet in html file can call Logger.log()
Stackdriver Logging : shows console.log()

* Use clasp to work on apps script locally
https://github.com/google/clasp

* spreadsheet api
https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet

* mongodb
https://stackoverflow.com/questions/50448272/avoid-current-url-string-parser-is-deprecated-warning-by-setting-usenewurlpars
MongoClient.connect("mongodb...", {userNewUrlParser: true});
mongoose.connect("..." {userNewUrlParser: true})
https://mongodb.github.io/node-mongodb-native/api-generated/mongoclient.html
Look here for coonect parameters

* mongodb v3.0
Read more detail here about changes to connect

https://stackoverflow.com/questions/47662220/db-collection-is-not-a-function-when-using-mongoclient-v3-0
MongoClient.connect('mongodb://localhost:27017',
 (err, client) => {
 var db = client.db('name of database');
});

* https://gbsc-gcp-lab-gssc.appspot.com/key.json

* mongodb query a collection
https://www.quackit.com/mongodb/tutorial/mongodb_query_a_collection.cfm
db.inventory.find( { field : { $ne: 10 } } )
https://docs.mongodb.com/manual/tutorial/query-documents/
https://docs.mongodb.com/manual/reference/operator/query/ne/

* apps script libraries
https://developers.google.com/apps-script/guides/libraries
https://script.google.com/home

* apps store
https://docs.google.com/spreadsheets/d/1akU-WwDEuRylKSG0fIk9YIkO3Q4jmPsL0kgGpAwsZ_U/edit?addon_store#gid=0

* class SpreadSheet
https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet#getActiveRange()
https://developers.google.com/apps-script/reference/spreadsheet/

* use this to code apps locally
https://github.com/google/clasp
https://stackoverflow.com/questions/46782386/how-to-edit-google-app-script-outside-of-the-browser-e-g-in-emacs-or-vim

* rules, validation
https://developers.google.com/apps-script/reference/spreadsheet/range#getsheet

* logger
https://developers.google.com/apps-script/reference/spreadsheet/range#getsheet

* copy
https://productforums.google.com/forum/#!topic/docs/SwIuouNeblw
https://productforums.google.com/forum/#!topic/docs/SwIuouNeblw
function copy() {
    var s = SpreadsheetApp.getActive()
        .getSheetByName('JobsFeedbackHistoryTracking')
    s.getRange(1, 8, 100, 92)
        .copyValuesToRange(s, 9, 93, 1, 100);
}


function Copy() {

 var sss = SpreadsheetApp.openById('spreadsheet_key'); //replace with source ID
 var ss = sss.getSheetByName('Source'); //replace with source Sheet tab name
 var range = ss.getRange('A2:E6'); //assign the range you want to copy
 var data = range.getValues();

 var tss = SpreadsheetApp.openById('spreadsheet_key'); //replace with destination ID
 var ts = tss.getSheetByName('SavedData'); //replace with destination Sheet tab name
 ts.getRange(ts.getLastRow()+1, 1,5,5).setValues(data); //you will need to define the size of the copied data see getRange()

}

https://stackoverflow.com/questions/12291549/copy-a-range-from-one-spreadsheet-to-another

var beginning_row = 12;
var beginning_col = /*what ever corresponds to 'DA' */ ;

var newRange = ts.getRange(beginning_row, beginning_col,
featureList.length, featureList[0].length); //define target range



down vote
I am using somepart of someone here, I this code is working for me.

function CopyRange() {
 var sss = SpreadsheetApp.openById('spreadsheetid'); //replace with source ID
 var ss = sss.getSheetByName('sheetname'); //replace with source Sheet tab name
 var range = ss.getRange('A2:G50'); //assign the range you want to copy
 var data = range.getValues();

 var tss = SpreadsheetApp.openById('SpreadsheetID'); //replace with destination ID
 var ts = tss.getSheetByName('sheetname2'); //replace with destination Sheet tab name

 ts.getRange(ts.getLastRow()+1, 1,49,7).setValues(data); //you will need to define the size of the copied data see getRange()

}

// The code below will set the values for range A1:D2 to the values in an array.
var myTable = [[1, 2, 3, 4],[5, 6, 7, 8]];
var sheet = SpreadsheetApp.getActiveSheet();
sheet.getRange(1,1,2,4).setValues(myTable);



I use this function to copy an entire sheet's (values only) between documents:

 function updateSourceToTarget(sourceID,sourceName,targetID,targetname){
  Logger.log(sourceID + ' ' + sourceName + ' ' +targetname);
  var source = SpreadsheetApp.openById(sourceID).getSheetByName(sourceName);
  var destination = SpreadsheetApp.openById(targetID).getSheetByName(targetname);
  var sourcelastRow = source.getLastRow();
  var sourcelastCol = source.getLastColumn();
  var sourcedata = source.getRange(1,1,sourcelastRow,sourcelastCol).getValues();
  destination.getRange(1,1,sourcelastRow,sourcelastCol).setValues(sourcedata);
 }

then I call this function, in example:

updateSourceToTarget('sourceID','sourceSheetName','targetID','targetSheetName');

* trigger ui test if non-empty cell, and see if there is a change
https://webapps.stackexchange.com/questions/87346/add-a-script-trigger-to-google-sheet-that-will-work-in-android-mobile-app
https://webapps.stackexchange.com/questions/87346/add-a-script-trigger-to-google-sheet-that-will-work-in-android-mobile-app

function onEdit(e) {
  if (e.range.getA1Notation() == 'B1') {
    if (/^\w+$/.test(e.value)) {
      eval(e.value)();
      e.range.clear();
    }
  }
}

function insertSomething() {
  var sheet = SpreadsheetApp.getActiveSheet();
  sheet.getRange(2,3).setValue('inserted something');
}

function convertSomething() {
  var sheet = SpreadsheetApp.getActiveSheet();
  sheet.getRange(3,3).setValue('converted something');
}

* button
http://googleappscripting.com/google-spreadsheet-button/

* apps scrit
https://developers.google.com/apps-script/

* apps-script send email
https://developers.google.com/apps-script/overview

* apps-script chatbot
https://developers.google.com/hangouts/chat/quickstart/apps-script-bot

* apps-script forms
https://developers.google.com/apps-script/quickstart/forms

* binding a script vs standalone scripts
https://developers.google.com/apps-script/guides/bound

* my library
https://script.google.com/home/my

* forms
https://script.google.com/macros/d/M20ou43RmJjPDYLw58v4hSLuLDfwAn5z9/edit?uiv=2&mid=ACjPJvHOeyFVKAS1Ua997dIrO4T4LXODKIA5my-XsUOcVG1Nv9KRZuhEvTwZ8dgfiZV3rt91-w7Su4CRuP0yh8XGCVvF3ZvzaPO2fMhLM4BAQMGTao3eA8nrcXRmlL7xNWkTNe_QJ2DyZzA

* sequencing
https://docs.google.com/spreadsheets/d/1eZSEFYa14xVP8UEf19Wf7eNT3QIEontS_cGQESQl9Pc/edit#gid=620323631
* Mapping network drive
File explorer, there is a network icon on left pane or the This PC
Right click and Map network drive
Folder name (note you can also browse for the folder)
\\jitter\samba

* portable cygwin
https://github.com/MachinaCore/CygwinPortable/issues/28

* how to print last char of a file
https://superuser.com/questions/252692/how-to-print-last-character-of-a-file

tail -c 1 afile

* python run process in background and get process id
https://stackoverflow.com/questions/44107048/python-run-bash-command-with-redirection-in-background-and-get-the-process-id

use shell=True in Popen

* piping stdout and stderr popen python
https://stackoverflow.com/questions/2331339/piping-output-of-subprocess-popen-to-files

import subprocess
with open("stdout.txt",'wb') as out, open("stderr.txt",'wb') as err:
    subprocess.Popen("ls", stdout=out, stderr=err)
* print string to s text file python
https://stackoverflow.com/questions/5214578/python-print-string-to-text-file

with open('afile','w') as tf:
    tf.write('astring')
or  print('astring', file=tf)

* wb in python
https://stackoverflow.com/questions/2665866/what-is-the-wb-mean-in-this-code-using-python

writing to a file in binary mode

* unicode text in text file python
https://stackoverflow.com/questions/6048085/writing-unicode-text-to-a-text-file

foo = u'....'  # some unicode stuff here
f = open('test','w')
f.write(foo.encode('utf8')
f.close()

f = file('test','r')
print(f.read().decode('utf8'))

* measuring time python
https://stackoverflow.com/questions/7370801/measure-time-elapsed-in-python

import time
start = timt.time()
print("hello")
print(time.time() - start)

* echo python
https://stackoverflow.com/questions/17226912/why-does-simple-echo-in-subprocess-not-working

import subprocess
p = subprocess.Ppen('echo $HOME', shell=True, stdout=subprocess.PIPE)
print p.communicate()[0];

or
subprocess.check_output(cmd, shell=True);

* Passing double quote shell cmds to python
https://stackoverflow.com/questions/14928860/passing-double-quote-shell-commands-in-python-to-subprocess-popen

shell=True

scritp.sh
ffmepg -i "concat:1.ts|2.ts" -vcodec copy -acodec copy tmp.mp4

import subprocess
subprocell.call('.script.sh'; shell=True)


* chmod in python
https://stackoverflow.com/questions/12791997/how-do-you-do-a-simple-chmod-x-from-within-python
import os
import stat
st = os.stat('afile')
os.chmod('afile', st.st_mode | stat.S_IEXEC())
stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH

os.chmod("afile", 0o775)

* python wait for process to terminate
https://stackoverflow.com/questions/325463/launch-a-shell-command-with-in-a-python-script-wait-for-the-termination-and-ret

import os
os.system('ls')

import os
os.spawlp(os.P_WAIT,'ls','-l')

# replaces current process
import os
os.exec*()

import subprocess
cmd = ['ls', '-l]
suprocess.Popn(cmd).wait()

import subporcess
cmd = ['ls', '-l]
p = suprocess.Popn(cmd, stdout=subporcess.PIPE)
for line in p.stdout:
    print(line)
p.wait()
print(p.returncode)

* earth
https://drive.google.com/drive/u/0/folders/16N9kPhdIt0vVhRq1BDTWg0JkS6b3nUUX
https://docs.google.com/spreadsheets/d/1IW7CiLaw2xEr3MYuLwZ5mJWEbhAEU_hP9J6od5vb-jk/edit#gid=1200594845

* lxd linux
https://stackoverflow.com/questions/30430526/how-is-lxd-different-from-lxc-docker
https://discuss.linuxcontainers.org/t/lxd-on-centos-7/1250
https://www.reddit.com/r/linux/comments/7pxa1s/does_anyone_use_lxd_canonicals_linux_container/

* gui in docker
http://fabiorehm.com/blog/2014/09/11/running-gui-apps-with-docker/
https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container/16311264#16311264

* imagej
** threshold
https://imagej.nih.gov/ij/developer/macro/functions.html#setAutoThreshold
** image
https://imagej.nih.gov/ij/docs/menus/image.html
** autothreshold
https://www.google.com/imgres?imgurl=https://upload.wikimedia.org/wikipedia/commons/4/46/Image_processing_post_otsus_algorithm.jpg&imgrefurl=https://en.wikipedia.org/wiki/Otsu%2527s_method&h=768&w=1024&tbnid=r78MMYg2gkKo-M:&q=otsu+threshold&tbnh=150&tbnw=200&usg=AI4_-kSOCXuFQPa_aOjwwIeeO9REqJfShQ&vet=12ahUKEwjux87F2rfeAhXcJjQIHV8UATQQ_B0wFXoECAQQBg..i&docid=6ofBwp6VxH1wrM&itg=1&sa=X&ved=2ahUKEwjux87F2rfeAhXcJjQIHV8UATQQ_B0wFXoECAQQBg
https://en.wikipedia.org/wiki/Otsu%27s_method
** imagePlus
https://imagej.nih.gov/ij/developer/api/ij/ImagePlus.html
** tutorials!
https://imagej.nih.gov/ij/docs/pdfs/tutorial12.pdf
https://imagej.nih.gov/ij/docs/pdfs/tutorial10.pdf
https://albert.rierol.net/imagej_programming_tutorials.html
** book
https://link-springer-com.stanford.idm.oclc.org/chapter/10.1007%2F978-1-4471-6684-9_2
https://link-springer-com.stanford.idm.oclc.org/content/pdf/10.1007%2F978-1-4471-6684-9.pdf
** edm
https://imagej.nih.gov/ij/developer/api/ij/plugin/filter/EDM.html
** impagePrrocessor
https://imagej.nih.gov/ij/developer/api/ij/process/ImageProcessor.html
https://imagej.nih.gov/ij/developer/api/ij/process/ImageProcessor.html
** edm
http://imagejdocu.tudor.lu/doku.php?id=gui:process:binary&s[]=edm
** binary
https://imagej.nih.gov/ij/developer/api/ij/plugin/filter/Binary.html
** source git
https://imagej.net/GitHub
https://github.com/fiji?page=4
https://imagej.net/Git_mini_howto
https://github.com/imagej/imagej
https://www.google.com/search?q=imagej+source+code+for+analysis&oq=imagej+source+code+for+analysis&aqs=chrome..69i57.5470j0j7&sourceid=chrome&ie=UTF-8
** browse source code here
https://imagej.nih.gov/ij/developer/source/ij/plugin/filter/Analyzer.java.html
** download zip here
https://imagej.nih.gov/ij/download/src/
https://www.google.com/search?q=imagej+ij+git&oq=imagej+ij+git&aqs=chrome..69i57j69i60.3758j0j7&sourceid=chrome&ie=UTF-8

* emacs grep mode
https://www.emacswiki.org/emacs/GrepMode#toc2
https://www.gnu.org/software/emacs/manual/html_node/emacs/Grep-Searching.html

* java tabbed pane selectindex
https://stackoverflow.com/questions/916948/java-jtabbedpane-how-can-i-select-a-tab-from-a-button

* Load file matplotlib
https://pythonprogramming.net/loading-file-data-matplotlib-tutorial/

* python sys argv
https://www.pythonforbeginners.com/system/python-sys-argv

* returning arrays in java
https://stackoverflow.com/questions/12869741/returning-arrays-in-java

* python math
https://docs.python.org/2/library/math.html

* julia and pbs
https://github.com/JuliaParallel/ClusterManagers.jl/blob/master/src/qsub.jl

* stanford outlook
https://outlook.office.com/owa/?realm=stanford.edu&path=/mail/search

* pbs and docker
https://www.google.com/search?q=pbs+docker&oq=pbs+docker&aqs=chrome..69i57.2394j0j7&sourceid=chrome&ie=UTF-8

* docker ubuntu image
https://hub.docker.com/_/ubuntu/
https://en.wikipedia.org/wiki/BusyBox

* docker gui
http://fabiorehm.com/blog/2014/09/11/running-gui-apps-with-docker/
https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container/16311264#16311264

* smerge emacs
C-c ^ a : keep all
C-c ^ n : next
C-c ^ p : previous
C-c ^ m : keep mine
C-c ^ o : keep other

C-c ^ e : ediff session : this is easier
smerge-ediff
vc-resolve-conflicts

n/p : next previous
a/b : keep a or b
/ : ancestor
q : quit

M-x smerge-transient-stae

~ : swap A/B order
d : bind to keep both

(defun ediff-copy-both-to-C ()
  (interactive)
  (ediff-copy-diff ediff-current-difference nil 'C nil
                   (concat
                    (ediff-get-region-contents ediff-current-difference 'A ediff-control-buffer)
                    (ediff-get-region-contents ediff-current-difference 'B ediff-control-buffer))))
(defun add-d-to-ediff-mode-map () (define-key ediff-mode-map "d" 'ediff-copy-both-to-C))
(add-hook 'ediff-keymap-setup-hook 'add-d-to-ediff-mode-map)

* xauth docker

Xauthority becomes an issue with newer systems. I can either discard
any protection with xhost + before running my docker containers, or I
can pass in a well prepared Xauthority file. Typical Xauthority files
are hostname specific. With docker, each container can have a
different host name (set with docker run -h), but even setting the
hostname of the container identical to the host system did not help in
my case. xeyes (I like this example) simply would ignore the magic
cookie and pass no credentials to the server. Hence we get an error
message 'No protocol specified Cannot open display'

The Xauthority file can be written in a way so that the hostname does
not matter. We need to set the Authentication Family to
'FamilyWild'. I am not sure, if xauth has a proper command line for
this, so here is an example that combines xauth and sed to do that. We
need to change the first 16 bits of the nlist output. The value of
FamilyWild is 65535 or 0xffff.

docker build -t xeyes - << __EOF__

FROM debian
RUN apt-get update
RUN apt-get install -qqy x11-apps
ENV DISPLAY :0
CMD xeyes
__EOF__

XSOCK=/tmp/.X11-unix
XAUTH=/tmp/.docker.xauth
xauth nlist :0 | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
docker run -ti -v $XSOCK:$XSOCK -v $XAUTH:$XAUTH -e XAUTHORITY=$XAUTH xeyes

Can be shortened to
-v $XSOCK -v $XAUTH --

Ubuntu creates /tmp/.docker.xauth with permission 600
In container xauth list
chmod 644 $XAUTH
xauth nslit :0 | ... command

Replace last 4 lines
xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f
/tmp/.docker.xauth nmerge - && docker run -it -v
/tmp/.X11-unix:/tmp/.X11-unix -v /tmp/.docker.xauth:/tmp/.docker.xauth
-e XAUTHORITY=/tmp/.docker.xauth -e DISPLAY=$DISPLAY xeyes

** Another way

55
down vote
I just found this blog entry and want to share it here with you because I think it is the best way to do it and it is so easy.

http://fabiorehm.com/blog/2014/09/11/running-gui-apps-with-docker/

PROS:
+ no x server stuff in the docker container
+ no vnc client/server needed
+ no ssh with x forwarding
+ much smaller docker containers

CONS:
- using x on the host (not meant for secure-sandboxing)

in case the link will fail someday I have put the most important part here:
dockerfile:

FROM ubuntu:14.04

RUN apt-get update && apt-get install -y firefox

# Replace 1000 with your user / group id
RUN export uid=1000 gid=1000 && \
    mkdir -p /home/developer && \
    echo "developer:x:${uid}:${gid}:Developer,,,:/home/developer:/bin/bash" >> /etc/passwd && \
    echo "developer:x:${uid}:" >> /etc/group && \
    echo "developer ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/developer && \
    chmod 0440 /etc/sudoers.d/developer && \
    chown ${uid}:${gid} -R /home/developer

USER developer
ENV HOME /home/developer
CMD /usr/bin/firefox
build the image:

docker build -t firefox .
and the run command:

docker run -ti --rm \
   -e DISPLAY=$DISPLAY \
   -v /tmp/.X11-unix:/tmp/.X11-unix \
   firefox
of course you can also do this in the run command with sh -c "echo script-here"

HINT: for audio take a look at: https://stackoverflow.com/a/28985715/2835523

I was actually able to get it to work using MobaXTerm by using the
Dockerfile as above and modifying the docker run command to mount
/tmp/.X11-unix to /c:/Users/username and set the host IPv4 address for
the DISPLAY environment variable.. – walksignison May 25 at 14:51

** Another

With docker data volumes it's very easy to expose xorg's unix domain
socket inside the container.

For example, with a Dockerfile like this:

FROM debian
RUN apt-get update
RUN apt-get install -qqy x11-apps
ENV DISPLAY :0
CMD xeyes
You could do the following:

$ docker build -t xeyes - < Dockerfile
$ XSOCK=/tmp/.X11-unix/X0
$ docker run -v $XSOCK:$XSOCK xeyes

This of course is essentially the same as X-forwarding. It grants the
container full access to the xserver on the host, so it's only
recommended if you trust what's inside.

** more
up vote
24
down vote
You can also use subuser: https://github.com/timthelion/subuser

This allows you to package many gui apps in docker. Firefox and emacs have been tested so far. With firefox, webGL doesn't work though. Chromium doesn't work at all.

EDIT: Sound works!

EDIT2: In the time since I first posted this, subuser has progressed greatly. I now have a website up subuser.org, and a new security model for connecting to X11 via XPRA bridging.

shareimprove this answer
edited Aug 17 '15 at 22:11
answered Feb 11 '14 at 22:49

timthelion
553616
3
Please note that subuser is still very new and relatively untested. If you run into any problems please submit bug reports! – timthelion Feb 11 '14 at 22:52
I'd avoid X11 if there's any way you can. Your killer app would be running the tor proxy in docker, and running a full browser with plugins in a child docker such that firewalling etc forces all network out via the tor docker. This would run laps around the current tor browser bundle for web usability because you'd let rich content through. – Will Feb 12 '14 at 6:31
1
Is the trouble for you with X11 security? Or is it that you want this
working with windows? Or that you want this to work remotely? All of
the above? I think that making this work with vnc is quite
possible(though I wouldn't make it the default method because it adds
a dependency on vnc). Making subuser work remotely isn't really
possible/meaningfull. There is also this:
github.com/rogaha/docker-desktop but from the bug reports it seems
xpra might be unusable in real life. – timthelion Feb 12 '14 at 10:45

** mobaterm
Please see original stackoverflow post
https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container/16311264#16311264

* neural networks topology geometry
http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/
Extremely good about visualizing action of neural networks

* perl tell and seek
https://perldoc.perl.org/functions/tell.html
https://perldoc.perl.org/functions/seek.html

* python conver epoch time to datetime
https://stackoverflow.com/questions/12400256/converting-epoch-time-into-the-datetime
time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(1347517370))

Or

import datetime
datetime.datetime.fromtimestamp(1347517370).strftime('%c')

Or

>>> import datetime
>>> datetime.datetime.fromtimestamp(1347517370).strftime('%Y-%m-%d %H:%M:%S')
'2012-09-13 14:22:50' # Local time

To get UTC,

>>> datetime.datetime.utcfromtimestamp(1347517370).strftime('%Y-%m-%d %H:%M:%S')
  '2012-09-13 06:22:50'
* grep only matching pattern
grep -oh "\w*th\w*" *
-o --only-matching
-h --no-filename

* grep only specifid group
https://unix.stackexchange.com/questions/13466/can-grep-output-only-specified-groupings-that-match
grep -Po  -P for perl -o for only

example
grep  -oP 'foobar \K\w+' test.txt
bash
happy

\K (?<=pattern) which use as a zero-width
look-behind assertion before the text you
want to output

(?=pattern) xtzerwao-width look-ahead assertion
after the text you want to output

* python parsing from json file
https://stackoverflow.com/questions/2835559/parsing-values-from-a-json-file

* python jsonstreamer
https://github.com/kashifrazzaqui/json-streamer

* genetics
https://susciclu.slack.com/

* vpn stanford
https://uit.stanford.edu/service/vpn
https://uit.stanford.edu/service/vpn/linux

* merge conflicts in emacs
https://emacs.stackexchange.com/questions/16469/how-to-merge-git-conflicts-in-emacs

* ethernet frame
https://www.google.com/search?ei=tZHYW962HqGT0gLd3JywAQ&q=ethernet+frame+max+size&oq=ethernet+frame+max+size&gs_l=psy-ab.3..0j0i22i30l4.14973.19099..19205...0.0..0.69.1207.22......0....1..gws-wiz.......35i39j0i131j0i20i264j0i131i20i264j0i67j0i20i263j0i20i263i264.GE2JzPMGzqE
64-1522 bytes

* prometheus query api
https://prometheus.io/docs/prometheus/latest/querying/api/

* emacs speed test
https://oremacs.com/2015/02/24/emacs-speed-test/

* parsing large files in python
https://stackoverflow.com/questions/21653738/parsing-large-9gb-file-using-python

* reading single character at a time
https://stackoverflow.com/questions/2988211/how-to-read-a-single-character-at-a-time-from-a-file-in-python

* python seek tell
https://www.tutorialspoint.com/python/file_seek.htm
https://stackoverflow.com/questions/15594817/f-seek-and-f-tell-to-read-each-line-of-text-file

* python reg expressions
https://www.tutorialspoint.com/python/python_reg_expressions.htm

* python variable is defined
https://www.oreilly.com/library/view/python-cookbook/0596001673/ch17s02.html

* org clean view
https://orgmode.org/guide/Clean-view.html

* tcpdump
# tcpdump is it going as fast as it can, can you see if server or
# binary capture pcal value

* python plot time series from a file
https://stackoverflow.com/questions/1574088/plotting-time-in-python-with-matplotlib

* convert epoch time
https://www.epochconverter.com/

* python json working with large datasets using pandas
https://www.dataquest.io/blog/python-json-tutorial/

* yajl used for jsonstream need to change some part of the code
https://launchpad.net/ubuntu/+source/yajl
https://lloyd.github.io/yajl/

* reformat json files with yajl
https://mobilefish.de/index.php/easily-re-format-json-files-yajl-tools-ubuntu-package
https://www.google.com/search?q=loading+a+json+file+python&oq=loading+a+json+file+python&aqs=chrome..69i57.4435j0j7&sourceid=chrome&ie=UTF-8

* pandas tutorial dataframe python
https://www.datacamp.com/community/tutorials/pandas-tutorial-dataframe-python#question1

* json-streamer
https://github.com/kashifrazzaqui/json-streamer/issues/5

* get pid from shell
https://stackoverflow.com/questions/21063765/get-pid-in-shell-bash
echo $$
echo $BASHPID

* suspend running process
http://go2linux.garron.me/linux/2011/01/stop-or-suspend-running-process-linux-control-it-882/
https://unix.stackexchange.com/questions/2107/how-to-suspend-and-resume-processes

kill -TSTP [pid]    : soft stop
kill -STOP [pid]    : hard stop like C-Z
kill -CONT [pid]    : resume execution

https://stackoverflow.com/questions/41787234/how-to-know-the-process-id-of-current-bash-session

* pbs
https://hpcc.usc.edu/support/documentation/pbs-to-slurm/

* quota
https://drive.google.com/drive/quota

* backup gmail to hard-drive
Chrome extension to backup email
https://www.thewindowsclub.com/backup-gmail-to-hard-drive
https://chrome.google.com/webstore/detail/save-emails-and-attachmen/nflmnfjphdbeagnilbihcodcophecebc?hl=en
https://docs.google.com/spreadsheets/d/1HGGFs57tarHJ9wfjZpPGYVWrTYe-w5Si8g3qWJleLF8/edit#gid=0
http://www.gmail-backup.com/download

* brazillian comics
http://gibisclassicos.blogspot.com/2018/04/disney-especial-n-150-editora-abril.html
http://www.mediafire.com/file/kqqe759g1omeq1j/DE150+-+Esportes.cbr
https://www.sendspace.com/file/tgyasg

* gmail size query
https://www.labnol.org/internet/gmail-size-search/26669/
size:5242880 list all email whose size is 5MB or greater

* json-streamer
https://github.com/kashifrazzaqui/json-streamer

* parse large text file
https://stackoverflow.com/questions/23505449/efficiently-read-and-parse-large-one-line-text-files

* laze reading large file python
https://stackoverflow.com/questions/519633/lazy-method-for-reading-big-file-in-python

* how to sort a large array python
http://neopythonic.blogspot.com/2008/10/sorting-million-32-bit-integers-in-2mb.html

* read a file in chunks python
https://stackoverflow.com/questions/4566498/python-file-iterator-over-a-binary-file-with-newer-idiom/4566523#4566523
def read_in_chunks(infile, chunk_size=1024*64):
    chunk = infile.read(chunk_size)
    while chunk:
        yield chunk
        chunk = infile.read(chunk_size)

* command line arguments python
https://stackabuse.com/command-line-arguments-in-python/
1. sys.argv[]
2. getopt module
3. argparse module

* regex python
https://docs.python.org/3.4/howto/regex.html
https://docs.python.org/2/library/re.html

* tmux copy and paste
https://www.google.com/search?q=tmux+copy+and+paste&oq=tmux+copy+and+paste&aqs=chrome..69i57.2720j0j7&sourceid=chrome&ie=UTF-8

* read().decode('utf-8') or simply .decode()
https://stackoverflow.com/questions/31019854/typeerror-cant-use-a-string-pattern-on-a-bytes-like-object-in-re-findall
https://stackoverflow.com/questions/11339955/string-encoding-and-decoding

* find multiple occurences in a string python
astring.find(asubstr, start_pos)
https://stackoverflow.com/questions/3873361/finding-multiple-occurrences-of-a-string-within-a-string-in-python

* slice strings python
https://www.pythoncentral.io/cutting-and-slicing-strings-in-python/

* static variables python
https://stackoverflow.com/questions/279561/what-is-the-python-equivalent-of-static-variables-inside-a-function

* python generator has additional stuff, iterators, closures, decorators
https://www.programiz.com/python-programming/generator

* concat bytes python
https://stackoverflow.com/questions/28130722/python-bytes-concatenation/28130794
a += b

* this bytes concat doesn't work python
https://docs.python.org/3/library/stdtypes.html
bytes.join()

* bytes python
https://www.w3resource.com/python/python-bytes.php#bytes
b'this is in bytes'

* stanford axess
https://axess.sahr.stanford.edu/group/guest/my-timecard-leave-balances

* print in colors python
https://stackoverflow.com/questions/287871/print-in-terminal-with-colors

* python logging
https://docs.python.org/2/howto/logging.html

* python wrapper functions, taking arguments
https://stackoverflow.com/questions/30904486/python-wrapper-function-taking-arguments-inside-decorator

    def wrapper(*args,**kwargs):
        some_function(*args,**kwargs)

* python logging
https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
logging.basicConfig(level=logging.INFO)

* python wrapping logging
https://bbengfort.github.io/snippets/2016/01/11/logging-mixin.html

* python convert bytes to string
https://stackoverflow.com/questions/606191/convert-bytes-to-a-string

* create a format string with arbitrarily number of parameters
https://www.google.com/search?q=how+to+create+a+format+string+with+arbitrarily+number+of+%7B%7D+python&oq=how+to+create+a+format+string+with+arbitrarily+number+of+%7B%7D+python&aqs=chrome..69i57.23241j0j7&sourceid=chrome&ie=UTF-8
str = "{}" * number; str.format([])

* jq! json queue count number of occurences of a word in a text file
jq -r '..|objects|keys[]' < file.json
-r recursive
https://unix.stackexchange.com/questions/2244/how-do-i-count-the-number-of-occurrences-of-a-word-in-a-text-file-with-the-comma
http://www.compciv.org/recipes/cli/jq-for-parsing-json/
https://stedolan.github.io/jq/manual/
https://github.com/stedolan/jq/tree/master/docs
https://github.com/stedolan/jq/issues/785
https://stackoverflow.com/questions/40396445/get-outputs-from-jq-on-a-single-line
https://programminghistorian.org/en/lessons/json-and-jq#json-vs-json-lines
https://unix.stackexchange.com/questions/451496/jq-print-values-in-one-line
https://stedolan.github.io/jq/manual/v1.5/
https://mail.google.com/mail/u/0/#inbox
https://stackoverflow.com/questions/37710718/concat-2-fields-in-json-using-jq

https://www.google.com/search?q=pandas+dataframe+working+with+time+series+with+non-overlapping+time+stamps&ei=GJbcW4zuD5PQ9AO1x4yIBw&start=10&sa=N&ved=0ahUKEwiM2o6KqrbeAhUTKH0KHbUjA3EQ8NMDCJgB&biw=1457&bih=918

* imagej development
https://imagej.net/Development
https://imagej.net/Developing_ImageJ_in_IntelliJ_IDEA
https://imagej.net/Architecture
https://imagej.net/Philosophy#Release_early.2C_release_often
https://imagej.net/MorphoLibJ
https://imagej.net/Developing_ImageJ_in_IntelliJ_IDEA
https://imagej.net/Frequently_Asked_Questions#What_is_the_difference_between_Fiji_and_ImageJ.3F
https://imagej.net/List_of_update_sites
https://imagej.net/MorphoLibJ
https://imagej.net/Downloading_and_Building_Fiji_From_Source
https://imagej.net/Developing_ImageJ_in_Eclipse
https://imagej.net/Fiji/Downloads

* beginning with a pom.xml for imagej plugin development
https://github.com/imagej/imagej-maven-plugin/blob/master/pom.xml

* list packages installed by homebrew
https://apple.stackexchange.com/questions/101090/list-of-all-packages-installed-using-homebrew

* security with docker
https://www.oreilly.com/ideas/five-security-concerns-when-using-docker

* brew doctor
https://gist.github.com/egilbert/896426

* kubernetes
https://kubernetes.io/

* id pausd org schoology and infinite campus
https://docs.google.com/document/d/1n75WZpurqy4sIl4fJa46kj4XGaPnGw6jprupSSvaJ4U/edit
https://docs.google.com/document/d/1n75WZpurqy4sIl4fJa46kj4XGaPnGw6jprupSSvaJ4U/edit#
https://app.schoology.com/parent/home

* nodejs master class
https://pirple.thinkific.com/courses/the-nodejs-master-class

* jupyter notebook imagej
https://forum.image.sc/t/jupyter-notebook-for-imagej/5421

* xfiles
https://www.hulu.com/series/the-x-files-d6a7aec6-72d2-46bb-b337-2cb412df64c8

* best node js course
https://www.quora.com/What-is-the-best-Node-js-course-online-I-need-a-step-by-step-app-example-for-Node-js-that-is-as-awesome-effective-as-CS101-from-Udacity-which-uses-Python-It-can-be-a-paid-course

* github learning nodejs by examples
https://github.com/workshopper/learnyounode

* complete node.js course udemy
https://www.udemy.com/the-complete-nodejs-developer-course-2/?LSNPUBID=jU79Zysihs4&siteID=jU79Zysihs4-NirGEJofNAMzBA6AEOza1Q

* python concurrency and parallelism
https://www.toptal.com/python/beginners-guide-to-concurrency-and-parallelism-in-python
* solid
https://code.tutsplus.com/tutorials/solid-part-4-the-dependency-inversion-principle--net-36872
* agile design patterns
https://code.tutsplus.com/courses/agile-design-patterns
* parse array of json objects
https://stackoverflow.com/questions/50252063/how-to-parse-an-array-of-json-object-using-jq
jq '.aheading.anarray[]
* interface tcp drop rate
https://www.netcraftsmen.com/understanding-interface-errors-and-tcp-performance/

Initially the customer did not appear to be very concerned because the
percent of errors was below 3%. We personally find error rates of
greater than 0.001% to be a cause for concern.

* print in one line jq
https://unix.stackexchange.com/questions/451496/jq-print-values-in-one-line
https://unix.stackexchange.com/questions/451496/jq-print-values-in-one-line
https://stackoverflow.com/questions/40396445/get-outputs-from-jq-on-a-single-line
https://github.com/stedolan/jq/issues/785

* good tutorial on jq
https://programminghistorian.org/en/lessons/json-and-jq#json-vs-json-lines

* html select list disabled and change css
https://stackoverflow.com/questions/1379125/make-drop-down-list-item-unselectable
https://www.w3schools.com/tags/att_option_disabled.asp
https://stackoverflow.com/questions/15602140/how-to-style-disabled-options-in-a-form

* vue binding attribute v-bind
https://www.vuemastery.com/courses/intro-to-vue-js/attribute-binding/
https://vuejs.org/v2/guide/syntax.html#Attributes

* vue binding to boolean properties
https://stackoverflow.com/questions/49208624/can-a-vue-boolean-prop-be-true-by-its-presence-and-false-by-its-absence

* vue forms
https://vuejs.org/v2/guide/forms.html

* live-server npm keeps track of modifications in the directory, live reload
https://www.npmjs.com/package/live-server

* including javascript from other files
https://stackoverflow.com/questions/950087/how-do-i-include-a-javascript-file-in-another-javascript-file

* mozilla javascript export statement
https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export

* javascript access variables from another file
https://stackoverflow.com/questions/3244361/can-i-access-variables-from-another-file

* passing uninitialize object in Java
https://stackoverflow.com/questions/39205789/example-of-passing-an-uninitialized-object-as-parameter-in-java
Not possible, initialize to null

* imagej analyze menu
https://imagej.nih.gov/ij/docs/menus/analyze.html

* imagej shortcuts
https://imagej.nih.gov/ij/docs/shortcuts.html

* imagej overlays
https://forum.image.sc/t/overlays-on-multi-frame-hyperstacks/8061/3

* imagej imagecalculator
https://imagej.nih.gov/ij/developer/source/ij/plugin/ImageCalculator.java.html

* python plot 3d
https://jakevdp.github.io/PythonDataScienceHandbook/04.12-three-dimensional-plotting.html
from mpl_toolkits import mplot3d

* numpy fortran array
https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.asfortranarray.html

* imagej convex hull and floatpolygon get coordinates of convex hull
https://imagej.nih.gov/ij/plugins/docs/hull-circle/HullAndCircle05_.html
https://imagej.nih.gov/ij/developer/api/ij/process/FloatPolygon.html

* pandas plotting
http://jonathansoma.com/lede/algorithms-2017/classes/fuzziness-matplotlib/understand-df-plot-in-pandas/
https://stackoverflow.com/questions/34347145/pandas-plot-doesnt-show

* pyplot ij reverse y, equal axis
https://stackoverflow.com/questions/2051744/reverse-y-axis-in-pyplot
https://matplotlib.org/examples/pylab_examples/axis_equal_demo.html

* rotation matrix
https://en.wikipedia.org/wiki/Rotation_matrix

* convert columns in pandas to nparray
https://stackoverflow.com/questions/31789160/convert-select-columns-in-pandas-dataframe-to-numpy-array
a = df.iloc[:,1].values

* zip two columns together
https://stackoverflow.com/questions/44409084/how-to-zip-two-1d-numpy-array-to-2d-numpy-array
np.array(list(zip(x,y)))

* numpy indexing matrix multipy
https://docs.scipy.org/doc/numpy-1.10.0/user/basics.indexing.html
https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.matmul.html
a[-1] : last element

* scipy spatial ConvexHull Delaunay
https://docs.scipy.org/doc/scipy-0.19.0/reference/spatial.html
https://docs.scipy.org/doc/scipy-0.19.0/reference/generated/scipy.spatial.ConvexHull.html
https://docs.scipy.org/doc/scipy-0.19.0/reference/generated/scipy.spatial.ConvexHull.html
https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.spatial.Delaunay.find_simplex.html
https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.spatial.Delaunay.html

* Find if point in convex hull
https://stackoverflow.com/questions/16750618/whats-an-efficient-way-to-find-if-a-point-lies-in-the-convex-hull-of-a-point-cl
https://stackoverflow.com/questions/16750618/whats-an-efficient-way-to-find-if-a-point-lies-in-the-convex-hull-of-a-point-cl/22931719
https://stackoverflow.com/questions/16750618/whats-an-efficient-way-to-find-if-a-point-lies-in-the-convex-hull-of-a-point-cl/22931719

* Find intersection of line with convex hull
https://stackoverflow.com/questions/30486312/intersection-of-nd-line-with-convex-hull-in-python
https://stackoverflow.com/questions/30486312/intersection-of-nd-line-with-convex-hull-in-python

* Find the centroid of convex hull
https://stackoverflow.com/questions/31562534/scipy-centroid-of-convex-hull

* Find the volume of convex hull
https://stackoverflow.com/questions/24733185/volume-of-convex-hull-with-qhull-from-scipy

* ImageJ Fill Holes
http://imagej.1557.x6.nabble.com/Fill-holes-or-background-td3686344.html
https://forum.image.sc/t/use-the-plugin-fill-holes-in-my-plugin/2136/5

* numpy row vs column matrix
https://stackoverflow.com/questions/17428621/python-differentiating-between-row-and-column-vectors
Use reshape, e.g. np.reshape(3,1)

* numpy add row to array
https://stackoverflow.com/questions/3881453/numpy-add-row-to-array
#+begin_src python
  np.append([[1,1]], [[2,2]])
#+end_src

* python exit
https://stackoverflow.com/questions/1187970/how-to-exit-from-python-without-traceback
import sys
sys.exit(0)

* screenshots ubuntu
https://askubuntu.com/questions/254808/where-are-partial-screenshot-stored-or-how-to-specifiy-location
https://askubuntu.com/questions/114429/default-save-directory-for-gnome-screenshot
PrtScn       : captures entire screen
Alt PrtScn   : captures currently focused window
Shift PrtScn : captures specific rectangular area

* org mode adding links to existing files
https://orgmode.org/manual/Handling-links.html
C-u C-c C-l

* bios mega
https://www.kickstarter.com/projects/684398802/bios-origins-2nd-ed-pax-transhumanity-and-pax-porf

* wistia

0. Note also can search in the webpage's html
   https://fast.wistia.net/embed/iframe/cdwzrw7huu

1. copy link from video (right click)
   wvideo=zecx3q8dbc
2. get the wvideo= part (zecx3q8dbc)

3. Either use youtube-dl
   http://fast.wistia.net/embed/iframe/zecx3q8dbcw

   can handbrake it later, or better yet

   https://askubuntu.com/questions/486297/how-to-select-video-quality-from-youtube-dl

   Select the video quality:
   youtube-dl -F <link>
   youtube-dl -f <number> <link>

4. Paste in https://getvideo.at/en/ search and select the second 360
   mp4 one

   youtube-dl -f iphone_video <link> should work

* vlc codecs
sudo aptitude install ubuntu-restricted-extras

* coding with Mosh
https://sso.teachable.com/secure/teachable_accounts/profile
angular course

* Use this to download videos
https://getvideo.at/en/

* Select video quality from youtube-dl
https://askubuntu.com/questions/486297/how-to-select-video-quality-from-youtube-dl

* c++ namespace std
using namespace std

* c++ finding the length of array
https://stackoverflow.com/questions/4108313/how-do-i-find-the-length-of-an-array
end(a) - begin(a)

#+begin_src c++


  #include <iostream>
  #include <type_traits> // std::remove_extent std::remove_all_extents std::rank std::extent

  template<class T, size_t N>
  constexpr size_t length(T(&)[N]) { return N; }

  template<class T, size_t N>
  constexpr size_t length2(T(&arr)[N]) { return sizeof(arr) / sizeof(*arr); }

  int main()
  {
      int a[5][4][3]{{{1,2,3}, {4,5,6}}, { }, {{7,8,9}}};

      // New way
      constexpr auto l1 = std::extent<decltype(a)>::value;     // 5
      constexpr auto l2 = std::extent<decltype(a), 1>::value;  // 4
      constexpr auto l3 = std::extent<decltype(a), 2>::value;  // 3
      constexpr auto l4 = std::extent<decltype(a), 3>::value;  // 0

      // Mixed way
      constexpr auto la = length(a);
      //constexpr auto lpa = length(*a);  // compile error
      //auto lpa = length(*a);  // get at runtime
      std::remove_extent<decltype(a)>::type pa;  // get at compile time
      //std::remove_reference<decltype(*a)>::type pa;  // same as above
      constexpr auto lpa = length(pa);
      std::cout << la << ' ' << lpa << '\n';

      // Old way
      constexpr auto la2 = sizeof(a) / sizeof(*a);
      constexpr auto lpa2 = sizeof(*a) / sizeof(**a);
      std::cout << la2 << ' ' << lpa2 << '\n';

      return 0;
  }

#+end_src

* c++ array
int x[2] = {0,1,2};

you should use the array class and the array template. Try:

#include <array>
array<type_of_the_array, number_of_elements_in_the_array> Name_of_Array = {};

so now if you want to find the length of the array all you have to do
use the size function in the array class.

Name_of_Array.size();

* best anime
https://sheet.host/user/animenz

* 11/15/18
* Vueschool good vuex free
https://vueschool.io/plans
https://vueschool.io/checkout?plan=MONTHLY
https://vueschool.io/lessons/vuex-mutation-history-and-vue-devtools

* Another reasonable class $10
https://www.udemy.com/vuejs-2-the-complete-guide/?start=0
https://support.udemy.com/hc/en-us/articles/229231167-Downloading-Courses

* Interesting blog should go over it
https://blog.rangle.io/how-to-create-data-driven-user-interfaces-in-vue/

* Good forum
https://forum.vuejs.org/top/all?order=views

* Either quasar or vuetify
https://quasar-framework.org/
https://quasar-framework.org/quasar-play/android/index.html#/showcase
** hot reload
https://github.com/quasarframework/quasar/issues/21
https://github.com/quasarframework/quasar-template-default/issues/10
https://github.com/webpack-contrib/webpack-hot-middleware/issues/129

* Renew
https://www.namecheap.com/myaccount/login.aspx?returnurl=%2fcart%2faddtocart.aspx%3fproducttype%3ddomains%26action%3drenew%26domainlist%3dfrankliu.org

* Horizontal containers
https://codeburst.io/how-to-create-horizontal-scrolling-containers-d8069651e9c6
https://uxdesign.cc/creating-horizontal-scrolling-containers-the-right-way-css-grid-c256f64fc585
https://forum.vuejs.org/t/horizontal-scroll-using-buttons-in-vuejs/38089/2

* vue mastery a bit pricey
https://www.vuemastery.com/pricing

* Comparison of books and websites for vue
https://vuejsfeed.com/blog/best-resources-to-learn-vue-js-in-2018

* vue news
https://news.vuejs.org/issues/93

* scotch.io
https://scotch.io/tag/vue

* vue and firebase
https://vuejs.org/v2/examples/firebase.html
https://tech-blog.abeja.asia/entry/firebase-on-vue

* vue nuxt
https://medium.com/vue-mastery/10-reasons-to-use-nuxt-js-for-your-next-web-application-522397c9366b

* vue mastery
https://www.vuemastery.com/courses/mastering-vuex/mastering-vuex-orientation

* vue express
Good tutorial
https://www.techiediaries.com/vue-js-express-tutorial/
https://cherubini.casa/vue-js-and-express-can-they-live-together-c17d48bc41b7

* vue adonis
https://dev.to/mzanggl/build-fullstack-javascript-apps-with-adonis-and-vue-3edc

* vue and firestore vue and full stack
https://www.youtube.com/user/TechGuyWeb/playlists

* Deploying vue in google cloud
https://forum.vuejs.org/t/deploying-to-cloud-such-as-google-cloud/16143/5
https://stackoverflow.com/questions/53219588/deploying-vuejs-on-google-cloud

* vue or react on google cloud
https://www.youtube.com/watch?v=hh7DEAyDs2c

* deployment to heroku or google cloud fails
https://github.com/vuejs/vue-hackernews-2.0/issues/224

* nodejs to google cloud
https://www.youtube.com/watch?v=thlFWQ15Z-0

* deploy node js apps on google app engine
https://stackabuse.com/deploy-node-js-apps-on-google-app-engine/

* firebase hosting
https://firebase.google.com/docs/hosting/deploying

* SPA on google cloud
https://www.verypossible.com/blog/how-to-deploy-a-single-page-application-to-google-cloud

* vue firebase firestore
https://www.smashingmagazine.com/2018/04/vuejs-firebase-firestore/

* Elixir google an vue?
https://vue-hn.now.sh/item/16208809

* firebase vue written by evan
https://firebase.googleblog.com/2016/04/vuefire-firebase-meets-vuejs_0.html

* nuxt on google app engine (in japanese)
https://qiita.com/SatoTakumi/items/4f418dc5c700b9d66d7d

* webpack on gcloud
uploads assets to gcloud
https://www.npmjs.com/package/webpack-google-cloud-storage-plugin


* jobs for vue
https://workatremote.com/remote-Google-Cloud+Vue.js-jobs

* travis ci for firebase deployment
https://docs.travis-ci.com/user/deployment/firebase/

* nuxt.js gcloud deployment
https://github.com/nuxt/nuxt.js/issues/344
https://stackoverflow.com/questions/47122669/how-would-you-setup-nuxt-js-with-google-cloud-functions/50737486
https://stackoverflow.com/questions/47122669/how-would-you-setup-nuxt-js-with-google-cloud-functions

* nuxt also shows deployment
https://nuxtjs.org/guide/commands/
https://nuxtjs.org/faq/now-deployment/

* nuxt deploy cosmic js?
https://hackernoon.com/deploy-a-nuxt-js-tutorials-app-in-3-steps-20962ed7e74c

* nuxt search engine optimization
https://medium.com/vue-mastery/best-practices-for-nuxt-js-seo-32399c49b2e5
https://medium.com/vue-mastery/vuepress-vs-nuxt-js-ffc46cc38756

* Server-Side Render Vue Nuxt.js
https://www.youtube.com/watch?v=ZYUWsjUxxUQ

* Learn Vuex In 10 Minutes (Vue.js State Management)
https://www.youtube.com/watch?v=LW9yIR4GoVU

* nuxt features
https://jaxenter.com/nuxt-js-vue-based-framework-141512.html
https://jaxenter.com/nuxt-js-vue-based-framework-141512.html

* nuxt and firebase (in japanese)
https://inside.dmm.com/entry/2018/04/10/nuxt-firebase

* compare backends
https://medium.com/js-dojo/7-vue-js-backends-compared-74812da014f4
https://medium.com/js-dojo/7-vue-js-backends-compared-74812da014f4

* vue server side rendering router
https://vuejsdevelopers.com/2017/12/11/vue-ssr-router/

* vue in webstorm
https://blog.jetbrains.com/webstorm/2018/01/working-with-vue-js-in-webstorm/
https://www.jetbrains.com/help/idea/refactoring-source-code.html

* vim book how to learn vim plan
https://leanpub.com/deliberatevim
https://medium.com/actualize-network/how-to-learn-vim-a-four-week-plan-cd8b376a9b85
https://superuser.com/questions/246487/how-to-use-vimtutor
https://superuser.com/questions/663006/how-to-exit-help-in-vim

https://www.shortcutfoo.com/
http://www.vimgenius.com/

* cse373 hows heapify sum i/2^i
course based on weiss
https://courses.cs.washington.edu/courses/cse373/18wi/files/slides/

* solutions to weiss
https://www.quora.com/Is-there-an-answer-book-to-the-Data-Structures-and-Algorithm-Analysis-in-C-by-Mark-Allen-Weiss
http://mail.csis.ul.ie/~cs4115/resources/res-map.html

* solutions to intro to algorithms
https://ita.skanev.com/about.html

* mongodb compass allows you to view the mongodb
login to cloud.mongodb.com

There are 4 steps
1. build your first cluster
2. create your firstr database user
3. whitelist your ip address
4. connect to your cluster

You can click connect, then you have a bunch of choices to view the
database:

mongo shell
connect your application
connect with mongodb compass

** Connect to a Cluster
On this page

Prerequisites
Use the Connect dialog to Connect to Your Cluster
Prerequisites
Whitelist
To access a cluster, you must connect from an IP address on the Atlas project’s IP whitelist. If you need to add an IP address to the whitelist, you can do so in the Connect dialog. You can also add the IP address from the Security tab.
MongoDB User
To access a cluster, you must create a MongoDB User with access to the desired database(s) on your Atlas cluster. MongoDB users are separate from Atlas users. MongoDB users have access to MongoDB databases, while Atlas users have access to the Atlas application itself.

You can create a MongoDB user to access to your Atlas cluster in the
Connect dialog. You can also add the MongoDB user from the Clusters
view.

Use the Connect dialog to Connect to Your Cluster
1
Open the Connect dialog.
Go to the Clusters view. Click the Connect button for the cluster to which you wish to connect.

2
Whitelist your connection IP address.
Atlas only allows client connections to the cluster from entries in the project’s whitelist. The project whitelist is distinct from the API whitelist, which restricts API access to specific IP or CIDR addresses.

NOTE

You can skip this step if Atlas indicates in the Setup Connection Security step that you have already configured a whitelist entry in your cluster. To manage the IP whitelist, see Add Entries to the Whitelist.

If the whitelist is empty, Atlas prompts you to add an IP address to the project’s whitelist. You can either:

Click Add Your Current IP Address to whitelist your current IP address.

Click Add a Different IP Address to add a single IP address or a
CIDR-notated range of addresses.

For Atlas clusters deployed on Amazon Web Services and using VPC
Peering, you can add a Security Group associated with the peer VPC.

You can provide an optional description for the newly added IP address
or CIDR range. Click Add IP Address to add the address to the
whitelist.

3

Create a MongoDB User.

To access the cluster, you must create a MongoDB user with access to
the desired database(s) on the cluster.

NOTE

You can skip this step if Atlas indicates in the Setup Connection
Security step that you have at least one MongoDB user configured in
your project. To manage existing MongoDB users, see Add MongoDB Users.

If the project has no MongoDB users, Atlas prompts you to create a new
user with the Atlas Admin privilege. Enter the new user’s Username and
Password and click Create MongoDB User to save the user. Use this user
to connect to your cluster in the following step.

Once you have whitelisted an IP address and added a MongoDB user,
click Choose Your Connection Method.

4

Select your preferred connection method.

In the Choose a connection method step, Atlas provides instructions
for each listed connection method. Click your preferred connection
method and follow the instructions given.

For connecting via a command line tool such as mongodump or
mongorestore, use the Command Line Tools tab for an auto-generated
template for connecting to your Atlas cluster with your preferred
tool.

SEE ALSO

Connect via Driver
Connect via Compass
Connect via mongo Shell
Connect via BI Connector for Atlas
Browse Data via the Atlas Data Explorer
Test Failover
Best Practices Connecting from AWS Lambda
Connection Limits and Instance Sizes

* vim edit inside parents
ci( ci)                 # change inside parens
:help text-objects      # find out more about 'i' (inside)

Use
ca( ca)                 # change inside parens, parens included

* vim editing buffers
:b <#>       # if it a number
:b <name>    # give it a name
:bn          # next
:ls          # list all buffers
:e <name>    # open file in a new buffer

* vim flake8

install vim-pathogen (sudo aptitude install vim-pathogen)
add the following to your .vimrc

execute pathogen#infect()
filetype plugin indent on
syntax on
autocmd BufWritePost *.py call Flake8()

install using git clone on .vim/bundle directory
git clone http://github.com/nvie/vim-flake8

** using it
F7 will start the flake8 process, but if you write to the file
should automatically call Flake8()

navigate to the flake8 window with C-W j (down)

j,k + Enter to go to a particular line number

then edit the line and save, Flake8() will auto launch and
you get a fresh set of update errors

* vim whitespace and line numbers
:set number
:set list
:set listchars=...

:help listchars

* mongodb
https://www.mongodb.com/cloud/atlas
https://cloud.mongodb.com/v2/5bdcb1a2014b76b6fa656c9c#clusters/connect?clusterId=Cluster0
https://docs.atlas.mongodb.com/connect-to-cluster/#connect-to-a-cluster

* spacemacs
https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org#alternative-dotdirectory
https://gist.github.com/kaz-yos/0c7bc69d3df6a9199b4db715b9455a30
https://stackoverflow.com/questions/21568042/how-to-start-up-emacs-with-different-configurations
https://github.com/syl20bnr/spacemacs/blob/master/doc/BEGINNERS_TUTORIAL.org
https://emacs.stackexchange.com/questions/26121/portable-emacs-remapping-user-emacs-directory

* finding median
https://brilliant.org/wiki/median-finding-algorithm/

* find rank k
https://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/

* choosing pivot
https://stackoverflow.com/questions/164163/quicksort-choosing-the-pivot

* median of medians algorithm
https://stackoverflow.com/questions/12545795/explanation-of-the-median-of-medians-algorithm

* Master theorem
http://www.cse.unt.edu/~tarau/teaching/cf1/Master%20theorem.pdf
http://www.cs.columbia.edu/~mihalis/cs4231/Handouts/Mastertheorem.pdf

* Median of three value
https://stackoverflow.com/questions/7559608/median-of-three-values-strategy

* Python swap variables
https://stackoverflow.com/questions/14836228/is-there-a-standardized-method-to-swap-two-variables-in-python

* Quicksort Mergesort and Heapsort  Algorithm class
http://www.cs.fsu.edu/~breno/COP-4530/slides/21-anim.pdf

* Python pass by reference (list automatically pass by reference)
https://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference/986145#986145

* Vim split windows with C-w s (horizontally)  C-w v (vertically)
https://www.google.com/search?q=how+to+split+vim+windows&oq=how+to+split+vim+windows&aqs=chrome..69i57.8574j0j7&sourceid=chrome&ie=UTF-8

Move in between them with C-w <direction>
C-w r (rotate)
:q close a window
C-w +- increase height
C-w >< increase width
C-w = make them equal

* Vim select between parentheses, and brackets
ci) - change inside )
https://stackoverflow.com/questions/1061933/how-to-select-between-brackets-or-quotes-or-in-vim

* Vim tabs and buffers
https://stackoverflow.com/questions/102384/using-vims-tabs-like-buffers

* Vim select entire line Shift-V  yy to copy line to buffer
https://stackoverflow.com/questions/18666376/vim-select-entire-line

* vim find the next character ; ,
https://stackoverflow.com/questions/10340562/vim-repeat-find-next-character-x

* vim copy to clipboard "+ or "*
https://stackoverflow.com/questions/3961859/how-to-copy-to-clipboard-in-vim
https://stackoverflow.com/questions/11042920/how-to-copy-and-paste-between-different-tmux-panes-running-vim-instances

* vim change alternatives
http://manpages.ubuntu.com/manpages/trusty/man8/update-alternatives.8.html

* vim python
1. aptitude install vim-pathogen

2. add to ~/.vimrc

   execute pathogen#infect()
   filetype plugin indent on
   syntax on
   autocmd BufWritePost *.py call Flake8()

3. clone vim-flake to .vim/bundle
https://github.com/nvie/vim-flake8

* vim show all white space :set list
https://stackoverflow.com/questions/1675688/make-vim-show-all-white-spaces-as-a-character

* vim adding a space around a symbol (i \rightarrow )
https://vi.stackexchange.com/questions/8472/how-to-add-space-around-a-symbol-using-vim
https://stackoverflow.com/questions/2443347/command-to-surround-a-character-with-spaces-in-vim

* vim search and replace
http://vim.wikia.com/wiki/Search_and_replace

* min max heap
https://en.wikipedia.org/wiki/Min-max_heap
https://www.geeksforgeeks.org/binary-heap/
https://cglab.ca/~morin/teaching/5408/refs/minmax.pdf
https://rcoh.me/posts/reflections-on-two-years-of-freelancing/
http://erdani.com/research/sea2017.pdf
https://www.geeksforgeeks.org/heap-queue-or-heapq-in-python/
https://stackoverflow.com/questions/5347091/slicing-nested-list
http://interactivepython.org/courselib/static/pythonds/Trees/BinaryHeapImplementation.html
https://www.geeksforgeeks.org/heap-sort/
https://stackoverflow.com/questions/13142041/build-a-max-heap-and-iteration
https://en.wikipedia.org/wiki/Binary_heap
https://mail.google.com/mail/u/0/#inbox/KtbxLthRWGjbljjQTtZgHMZtgrfgrkjxNB
https://zoom.us/postattendee?id=36
http://oj.interviewkickstart.com/dashboard/student/
http://oj.interviewkickstart.com/view_editorial/615/51/
http://oj.interviewkickstart.com/view_topic/11/
https://www.google.com/maps/place/St+Mark's+Episcopal+Church/@37.4305085,-122.1339244,16z/data=!4m5!3m4!1s0x808fbaf871e2a37f:0xc5b13dc323f7d2f2!8m2!3d37.4317382!4d-122.1296963
https://www.quora.com/In-Python-how-do-I-convert-a-string-to-a-list-in-which-each-character-will-be-separated
https://www.geeksforgeeks.org/merge-sort/
https://stackoverflow.com/questions/10572624/mutable-strings-in-python
https://stackoverflow.com/questions/11624190/python-convert-string-to-byte-array
https://stackoverflow.com/questions/29177788/python-string-to-bytearray-and-back
https://wiki.python.org/moin/UsingPickle
https://www.google.com/search?q=split+even+odd+numbers&oq=split+even+odd+numbers&aqs=chrome..69i57.7106j0j4&sourceid=chrome&ie=UTF-8
https://hal-upec-upem.archives-ouvertes.fr/hal-01212839
https://www.geeksforgeeks.org/median-of-two-sorted-arrays/
https://www.google.com/maps/place/Page+St+%26+Fillmore+St,+San+Francisco,+CA+94117/@37.7730409,-122.4481683,14z/data=!4m5!3m4!1s0x808580a6a5cb67ef:0x211b8a0c02363319!8m2!3d37.7730409!4d-122.4306588
http://my.oracle.com/
https://my.oracle.com/site/git/cnt2721210.pdf
https://mightytext.net/web8/?exp=1
https://oracle-auth.securew2.com/auth/success.html?sessionId=qsl7nt60lhormtpfqij8ijb9fk&state=cda74dcf-5d1d-4225-9900-c349214a11cd&xsrfsign=
https://mail.google.com/mail/u/0/#inbox
https://interview-kickstart.teachable.com/

https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&duration=PT1H
https://www.techiediaries.com/vue-js-express-tutorial/
https://www.techiediaries.com/vuejs/
https://cloud.mongodb.com/user?n=%2Fv2%2F5bdcb1a2014b76b6fa656c9c&nextHash=%23clusters%2Fconnect%3FclusterId%3DCluster0#/atlas/login
https://docs.mongodb.com/manual/reference/connection-string/
https://cloud.mongodb.com/user?n=%2Fv2%2F5bdcb1a2014b76b6fa656c9c&nextHash=%23clusters%2Fsecurity%2Fusers#/atlas/login
https://mongoosejs.com/docs/connections.html
https://mongoosejs.com/docs/connections.html#buffering
https://cscnt.savannahstate.edu/StudentFiles/
https://oracle.zoom.us/meeting/6505062381
https://web.telegram.org/#/im?p=g243615789
https://www.facebook.com/events/192679788310167/
https://www.quora.com/How-to-use-VueJS-with-NodeJS
https://appdividend.com/2017/08/04/vuejs-nodejs-tutorial/
https://github.com/icebob/vue-express-mongo-boilerplate
https://clients.mindbodyonline.com/classic/mainclass?studioid=12827&tg=&vt=&lvl=&stype=&view=&trn=0&page=&catid=&prodid=&date=11%2f19%2f2018&classid=0&prodGroupId=&sSU=&optForwardingLink=&qParam=&justloggedin=&nLgIn=&pMode=0&loc=1
https://alligator.io/vuejs/using-new-vue-cli-3/
https://dev.to/abiodunjames/build-a-todo-app-with-nodejs-expressjs-mongodb-and-vuejs--part-1--29n7
https://www.google.com/search?q=shopping+app+vue+express+mongo&oq=shopping+app+vue+express+mongo&aqs=chrome..69i57.6044j0j7&sourceid=chrome&ie=UTF-8
https://www.djamware.com/post/5a1b779f80aca75eadc12d6e/mongo-express-vue-nodejs-mevn-stack-crud-web-application
https://imwz.io/building-a-store-with-vue-part-seven-express-api-setup/
https://imwz.io/building-store-vue-part-one/
https://medium.com/@jaouad_45834/full-stack-shopping-cart-with-mevn-stack-part-1-89dae1f35378
https://supost.com/post/index/129870434
https://web.stanford.edu/class/msande226/
https://sfbay.craigslist.org/search/sss?query=boardgame&sort=rel
https://outlook.office.com/owa/?realm=stanford.edu
https://docs.google.com/forms/u/1/d/e/1FAIpQLScoWQlDlg-5_LdbhGVqH7b-6KuuC8-ycsHv1P66LwO1Nu1mKg/formResponse
https://www.amazon.com/s/ref=sr_pg_2?rh=i%3Aaps%2Ck%3Abottom+bracket+removal+tool&page=2&keywords=bottom+bracket+removal+tool&ie=UTF8&qid=1542667947
https://web.stanford.edu/class/msande226/
http://localhost:8080/#/
https://console.developers.google.com/apis/dashboard?project=api-project-950844133145&duration=PT1H
https://console.developers.google.com/apis/library?project=gbsc-gcp-lab-gssc&authuser=1
chrome://newtab/
https://cloud.google.com/community/tutorials/nodejs-mongodb-on-appengine
https://cloud.google.com/appengine/docs/flexible/nodejs/reference/app-yaml
https://cloud.google.com/appengine/docs/standard/nodejs/quickstart
https://cloud.google.com/sdk/docs/proxy-settings
https://gbsc-gcp-lab-gssc.appspot.com/
https://mhaligowski.github.io/blog/2017/04/05/template-for-react-application.html
https://stackoverflow.com/questions/50245355/how-to-deploy-create-react-app-to-google-cloud
https://github.com/facebook/create-react-app/issues/2077
https://medium.com/google-cloud/server-side-rendered-react-on-google-cloud-functions-8b51b2b0878c
https://boardgamegeek.com/boardgame/6472/game-thrones-first-edition/expansions
https://boardgamegeek.com/boardgameexpansion/19400/game-thrones-storm-swords-expansion
https://www.google.com/search?q=star+trek+ccg+boardgamegeek&oq=star+trek+ccg+boardgamegeek&aqs=chrome..69i57j69i64.12056j0j7&sourceid=chrome&ie=UTF-8
https://www.youtube.com/watch?v=lrtRoTOWFHY
https://medium.com/google-cloud/hosting-a-react-js-app-on-google-cloud-app-engine-6d1341b75d8c
https://daveceddia.com/create-react-app-express-backend/
https://www.dataexpedition.com/support/notes/tn0021.html
http://cpham.perso.univ-pau.fr/TCP/58_3.PDF
https://www.google.com/search?q=tcp+throughput+under+transmission+loss&ei=pZzzW9qNLIPN0PEPzpSfqAs&start=10&sa=N&ved=0ahUKEwia9P7Hn-LeAhWDJjQIHU7KB7UQ8NMDCJ0B&biw=1395&bih=670
https://blog.thousandeyes.com/a-very-simple-model-for-tcp-throughput/
http://www-sop.inria.fr/members/Chadi.Barakat/Sigmetrics1.pdf
https://www.ietf.org/proceedings/50/I-D/pilc-error-06.txt
https://ieeexplore-ieee-org.stanford.idm.oclc.org/document/1354700
https://www.cisco.com/c/en/us/about/press/internet-protocol-journal/back-issues/table-contents-5/ipj-archive/article09186a00800c8417.html
https://web.telegram.org/#/im?p=@jieunjang
https://www.netcraftsmen.com/understanding-interface-errors-and-tcp-performance/
https://dl-acm-org.stanford.idm.oclc.org/citation.cfm?id=264023
https://cseweb.ucsd.edu/classes/wi01/cse222/papers/mathis-tcpmodel-ccr97.pdf
https://link-springer-com.stanford.idm.oclc.org/chapter/10.1007/978-3-642-56478-9_35
https://link-springer-com.stanford.idm.oclc.org/content/pdf/10.1007%2F978-3-642-56478-9.pdf
https://orgmode.org/worg/org-tutorials/org-latex-preview.html

* org latex preview
https://emacs.stackexchange.com/questions/30341/how-do-i-customize-the-process-that-gets-triggered-in-org-preview-latex-fragment
https://orgmode.org/worg/org-tutorials/org-latex-preview.html
https://www.reddit.com/r/emacs/comments/5rf9d4/help_org_setup_preview_latex_fragments/
https://emacs-orgmode.gnu.narkive.com/tzPJkvJi/o-what-is-the-best-way-to-show-inline-math-formulas-in-org-mode
https://orgmode.org/worg/org-tutorials/org-latex-preview.html
https://github.com/jgm/pandoc/issues/2440
Need to install texlive-latex-recommended texlive-latex-extra

* tcp tutorial
http://ssfnet.org/Exchange/tcp/tcpTutorialNotes.html

* multiple connections to same port
https://stackoverflow.com/questions/3329641/how-do-multiple-clients-connect-simultaneously-to-one-port-say-80-on-a-server
https://blogs.technet.microsoft.com/askds/2008/10/29/port-exhaustion-and-you-or-why-the-netstat-tool-is-your-friend/
https://stackoverflow.com/questions/1694144/can-two-applications-listen-to-the-same-port
https://gemfire.docs.pivotal.io/96/geode/topologies_and_comm/cs_configuration/chapter_overview.html
https://stackoverflow.com/questions/10861556/how-listening-to-a-socket-works
https://stackoverflow.com/questions/3329641/how-do-multiple-clients-connect-simultaneously-to-one-port-say-80-on-a-server
https://stackoverflow.com/questions/2997754/does-the-port-change-when-a-server-accepts-a-tcp-connection
https://stackoverflow.com/questions/3638953/do-tcp-connections-get-moved-to-another-port-after-they-are-opened
https://stackoverflow.com/questions/2997754/does-the-port-change-when-a-server-accepts-a-tcp-connection
https://stackoverflow.com/questions/3329641/how-do-multiple-clients-connect-simultaneously-to-one-port-say-80-on-a-server?noredirect=1&lq=1
http://www.scs.stanford.edu/07wi-cs244b/refs/net2.pdf
https://stackoverflow.com/questions/11129212/tcp-can-two-different-sockets-share-a-port/11129641
https://serverfault.com/questions/313168/is-it-possible-to-run-two-webservers-on-the-same-port-on-the-same-server-e-g

* load balancer python
https://github.com/bennr01/load_balancer/blob/master/load_balancer.py
https://www.google.com/search?q=load+balancer+in+python&oq=load+balancer+in+python&aqs=chrome..69i57.4476j0j7&sourceid=chrome&ie=UTF-8
https://github.com/j2kun/load-balancing/blob/master/loadbalance.py
https://ecs-network.serv.pacific.edu/past-courses/2014-fall-ecpe-177/projects/project-5
https://in.pycon.org/cfp/pycon-india-2015/proposals/python-load-balancer-0-to-1-million-requests-per-second~dwjRb/
https://www.youtube.com/watch?v=5jNQgX-bTeM
https://news.ycombinator.com/item?id=10885727
https://www.geeksforgeeks.org/load-balancing-on-servers-random-algorithm/
http://www.haproxy.org/
https://jaxenter.com/one-million-requests-per-sec-no-sweat-for-compute-engine-says-google-107188.html
https://www.techempower.com/blog/2014/03/04/one-million-http-rps-without-load-balancing-is-easy/
https://pypi.org/project/txLoadBalancer/
https://github.com/akan5938/mantrid
https://medium.freecodecamp.org/million-requests-per-second-with-python-95c137af319

* app engine help
https://cloud.google.com/appengine/community
https://stackoverflow.com/questions/tagged/google-app-engine
https://stackoverflow.com/questions/tagged/google-app-engine?sort=faq&amp;pagesize=50
https://groups.google.com/forum/#!forum/google-appengine
https://github.com/search?q=app+engine&amp;type=Repositories
https://bitbucket.org/repo/all?name=gae
https://www.youtube.com/user/GoogleCloudPlatform
https://cloudplatform.googleblog.com/

* ticket number
181119-003127
was assigned to level 2 team
did not send any confirmation

* andrea wallman
925-490-7704
719-534-5634 stephanie ballies (supervisor)
http://oj.interviewkickstart.com/view_topic/12/
https://www.vuemastery.com/conferences
https://drive.google.com/drive/u/0/folders/1x1k7fYgPvmF2KIb3s0bPrz8BLNwCJ_8k
https://docs.google.com/spreadsheets/d/13imr8QgbvA4l5AXg4sFCOAiP3QqowaSy-oL3eO5qf8A/edit#gid=2066805712
http://oj.interviewkickstart.com/view_editorial/608/102/
http://oj.interviewkickstart.com/view_test_problem/608/103/
https://twitter.com/mylesborins?lang=en
https://daveceddia.com/deploy-react-express-app-heroku/
https://mhaligowski.github.io/blog/2017/04/05/template-for-react-application.html
https://www.verypossible.com/blog/how-to-deploy-a-single-page-application-to-google-cloud
https://www.mongodb.com/webinar/building-modern-apps-with-the-mern-stack-and-gcp
https://www.google.com/search?q=Building+Modern+Apps+with+the+MERN+Stack+and+Google+Cloud+Platform&oq=Building+Modern+Apps+with+the+MERN+Stack+and+Google+Cloud+Platform&aqs=chrome..69i57j69i60l2j69i61.455j0j7&sourceid=chrome&ie=UTF-8
https://resources.mongodb.com/vimeo-all-videos/building-modern-apps-with-the-mern-stack-and-google-cloud-platform-4
https://www.youtube.com/results?search_query=building-modern-apps-with-the-mern-stack-and-google-cloud-platform
https://vimeo.com/search?q=mern
https://developer.okta.com/blog/2018/02/15/build-crud-app-vuejs-node
https://medium.com/@jaouad_45834/full-stack-shopping-cart-with-mevn-stack-part-1-89dae1f35378
https://nuxtjs.org/guide/development-tools
https://www.youtube.com/watch?v=nteDXuqBfn0
https://academind.com/learn/vue-js
https://www.udemy.com/the-complete-vue-js-course/
https://web.stanford.edu/class/msande226/datasets.html
https://en.wikipedia.org/wiki/Bessel%27s_correction
https://en.wikipedia.org/wiki/Bessel%27s_correction#Source_of_bias
https://www.google.com/search?q=R+cannot+find+display&oq=R+cannot+find+display&aqs=chrome..69i57j69i64l3.3428j0j7&sourceid=chrome&ie=UTF-8
https://mail.google.com/mail/u/0/#inbox
http://oj.interviewkickstart.com/view_test_problem/608/100/
https://stackoverflow.com/questions/1535327/how-to-print-objects-of-class-using-print
http://animeheaven.eu/50latest.php
https://kisscartoon.ac/Cartoon/Star-Wars-Resistance-Season-1/Episode-001-The-Recruit?id=81586&s=fserver
https://reactdom.com/vue
https://www.udemy.com/vue-web-apps/?ranMID=39197&ranEAID=R7BSs79ua1Y&ranSiteID=R7BSs79ua1Y-CbZPNlJ7DYYsmMsWlpdMWg&siteID=R7BSs79ua1Y-CbZPNlJ7DYYsmMsWlpdMWg&LSNPUBID=R7BSs79ua1Y
https://www.udemy.com/vuejs-2-essentials/?ranMID=39197&ranEAID=R7BSs79ua1Y&ranSiteID=R7BSs79ua1Y-CkUmu5E53HQO9FJ2.f8_RA&siteID=R7BSs79ua1Y-CkUmu5E53HQO9FJ2.f8_RA&LSNPUBID=R7BSs79ua1Y
https://digitaldefynd.com/best-vue-js-tutorial-course-certification-training/
https://devopscube.com/pluralsight-free-subscription/
https://crunchadeal.com/coupon/get-70-free-online-courses-for-2-months-from-pluralsight/
https://www.pluralsight.com/partners/google?growid=googleindiahomev1&clickid=RhixA3zEJTTH07dSTaVBOXZdUkgyeZ3gEUU72s0&irgwc=1&mpid=133200&utm_source=impactradius&utm_medium=digital_affiliate&utm_campaign=133200&aid=7010a000001xAKZAA2
https://www.pluralsight.com/pricing
https://www.pluralsight.com/partners/google?growid=googleindiahomev1&clickid=RhixA3zEJTTH07dSTaVBOXZdUkgycJzgEUU72s0&irgwc=1&mpid=133200&utm_source=impactradius&utm_medium=digital_affiliate&utm_campaign=133200&aid=7010a000001xAKZAA2
https://absolute-sharepoint.com/2015/12/free-pluralsight-6-month-subscription.html
https://www.pluralsight.com/learn?clickid=RhixA3zEJTTH07dSTaVBOXZdUkgycJyAEUU72s0&irgwc=1&mpid=1192259&utm_source=impactradius&utm_medium=digital_affiliate&utm_campaign=1192259&aid=7010a000001xAKZAA2
https://www.google.com/search?q=how+to+remove+duplicates+from+heap&oq=how+to+remove+duplicates+from+heap&aqs=chrome..69i57.4443j0j7&sourceid=chrome&ie=UTF-8
chrome://newtab/
https://mail.google.com/mail/u/0/#search/pluralsight/FMfcgxvzLDxhTnbJpFmwDBMbrPwkZXnG
https://docs.python.org/2/library/sets.html
https://www.oraclesgame.com/
chrome://newtab/
chrome://newtab/

* jq -c option
compact output, i.e. do not pretty print

* jq '.[]'
. is the identify operator
.foo produce the value

* git submodules untracked
https://stackoverflow.com/questions/4161022/how-to-track-untracked-content
git submodule add http://github.com/....

* flask + vue

Following this one
https://cloud.google.com/appengine/docs/standard/python/getting-started/python-standard-env

** setup
1. create a directory, e.g. flask, cd flask
2. create a virtualenv
   conda create -p pygoogle pip python=2.7
3. conda activate pygoogle/   # note you need the '/' at the end
4. pip install google-cloud

https://cloud.google.com/python/setup

** files
https://cloud.google.com/appengine/docs/standard/python/getting-started/python-standard-env

appengine_config.py

#+begin_src python
  from google.appengine.ext import vendor

  # Add any libraries installed in the "lib" folder
  vendor.add('lib')
#+end_src

requirements.txt

#+begin_src python
  Flask==1.0.2
  Werkzeug==0.14.0
#+end_src

** In the virtual env (pygoogle) install the necessary libraries
pip install -t lib -r requirements.txt

** yaml

app.yaml

#+begin_src yaml
  runtime: python27
  api_version: 1
  threadsafe: true

  handlers:
  - url: /static
    static_dir: static
  - url: /.*
    script: main.app

#+end_src

** request handler

main.py

** to run the development version
export CLOUDSDK_PYTHON=$(which python2)
dev_appserver.py app.yaml

** update gcloud service update and install
gcloud components update
gcloud components install cloud-datastore-emulator
gcloud components install app-engine-pythonn


** python 3.7
https://cloud.google.com/appengine/docs/standard/python3/testing-and-deploying-your-app

** error with ssl on yaml
https://stackoverflow.com/questions/5128845/importerror-no-module-named-ssl
add to app.yaml:

libraries:
- name: ssl
  version: latest
* python __init__.py
http://mikegrouchy.com/blog/2012/05/be-pythonic-__init__py.html

apackage/
 __init__.py
 amodule.py

Add to __init__.py
from apackage.amodule import afunc

Now you can just:
from apackage import afunc

instead of:
from apackage.amodule import afunc

* cleaning up google drive and email
https://drive.google.com/#quota

Note that rclone always copies the contents of a directory, never the
directory itself:

rclone copy from_remote:some-folder local-folder
rclone mkdir to_remote:some-folder
rclone copy local-folder to_remote:some-folder

* cleaning up email
1. In Gmail/Search box, has:attachment larger:10M
2. In Gmail, download the attachments
3. In Thunderbird, delete the attachments

* cleaning up photos
https://photos.google.com/settings
recover will change the images to high quality


* docker firefox vnc how to

local> docker pull creack/firefox-vnc
local> docker save creack/firefox-vnc -o creack-firefox-vnc.tar
local> sftp network
sftp> put creaek-firefox-vnc.tar
ssh network
network> docker load -i creack-firefox-vnc.tar
# network> docker run -p 5900 -e HOME=/ creack/firefox-vnc x11vnc
# -forever -usepw -create (password is 1234)
network> docker run -it --expose 5900 -p 127.0.0.1:5900:5900 -e HOME=/
         creack/firefox-vnc /bin/bash
network/docker> x11vnc -display :0 -forever -shared -create

local> ssh -NL 5900:localhost:5900 network
local> vncviewer localhost:5900

network> docker ps # list docker images running
network> docker kill <continer id>

* How to create docker image

# Firefox over VNC
#
# VERSION               0.1
# DOCKER-VERSION        0.2

FROM    ubuntu:12.04
# Make sure the package repository is up to date
RUN     echo "deb http://archive.ubuntu.com/ubuntu precise main universe" > /etc/apt/sources.list
RUN     apt-get update

# Install vnc, xvfb in order to create a 'fake' display and firefox
RUN     apt-get install -y x11vnc xvfb firefox
RUN     mkdir ~/.vnc
# Setup a password
RUN     x11vnc -storepasswd 1234 ~/.vnc/passwd
# Autostart firefox (might not be the best way to do it, but it does the trick)
RUN     bash -c 'echo "firefox" >> /.bashrc'


docker -t <sometile> build

* consol's docker image for headless vnc containers
https://github.com/ConSol/docker-headless-vnc-container

local> docker pull consol/ubuntu-xfce-vnc
local> docker save consol/ubuntu-xfce-vnc -o consl-ubuntu-xfce-vnc.tar
local> sftp network

sftp> cd fyliu
sftp> put consol-ubuntu-xfce-vnc.tar

network> docker load -i consol-ubuntu-xfce-vnc.tar
network> docker run -it -p 5901:5901 -p 6901:6901
         consol/ubuntu-xfce-vnc
         -v /mnt/network /mnt/network
         /bin/bash

local> ssh -NL 5901:localhost:5901 network
local> vncviewer localhost:5901
       (password is vncpassword)

* Adding emacs docker

# Docker file

## Custom Dockerfile
FROM consol/ubuntu-xfce-vnc
ENV REFRESHED_AT 2018-03-18

# Switch to root user to install additional software
USER 0

## Install a gedit
## RUN yum install -y gedit \
##    && yum clean all

RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y emacs jq less sudo aptitude build-essential \
 curl git python3-pip python-pip python3-dev python-dev \
 python3-virtualenv python-virtualenv tmux \
 openbox tint2 gnome-terminal gnome-session gnome-panel \
 apt-utils
RUN apt autoremove -y
RUN apt-get clean -y

## switch back to default user
USER 1000

docker build --network=host -t frankie/ubuntu-xfce-vnc ubuntu-xfce-vnc
docker save -o frankie/ubuntu-xfce-vnc frankie-ubuntu-xfce-vnc.tar
sftp network
cd fyliu
cd docker
put frankie-ubun*
docker load -i frankie-ubuntu-xfce-vnc.tar
docker run -it -v /mnt/network:/mnt/network -p 5901:5901 -p 6901:6901
--user root frankie/ubuntu-xfce-vnc /bin/bash

* docker adding user and groups

File Edit Options Buffers Tools Sh-Script Help
# 1. run docker-run-root.sh
# 2. run these two commands
# 3. Note: gotten from id -u  id -G
# 4. verify with
#    root> su fyliu
#    fyliu> groups

addgroup --gid 2147483646 access-login
adduser --uid 15340 fyliu --ingroup access-login

 *

* cookies youtube-dl
https://daveparrish.net/posts/2018-06-22-How-to-download-private-YouTube-videos-with-youtube-dl.html
DAVE PARRISH'S BLOG
HOMEABOUTPROJECTSCONTACTARCHIVE
HOW TO DOWNLOAD PRIVATE VIDEOS FROM YOUTUBE WITH YOUTUBE-DL
Posted on June 22, 2018
youtube-dl is a wonderful tool for downloading videos so they can be watched offline. Most of the time I only want to store a publicly accessible video. Sometimes I want to access a video that is only accessible when I am logged into my YouTube account. To do this was more challenging than I thought it would be, partly because youtube-dl is working through some issues. The specific issues I ran into dealt with two factor authentication and reading cookie formats.

SUMMARY
Here is what eventually worked for me.

Install EditThisCookie plugin for Chrome (Chromium in my case)
Set the cookie export format to Netscape HTTP Cookie File
Log into YouTube
Export the cookies into a file for the domains https://youtube.com, https://accounts.google.com and https://www.google.com
Make sure the cookies are properly formatted with the curl tool
Download your video using the --cookies flag
WHY COOKIES?
I had to use cookies because I couldn’t get the --username flag to work due to an issue with 2FA in youtube-dl. If 2FA authentication is not turned on then maybe --username will work. Because of this I needed to export my cookies with EditThisCookie plugin. I couldn’t find a plugin for my version of Firefox (version 60.0.2).

EDITTHISCOOKIE
The first issue I had with EditThisCookie is it exported in JSON format, but youtube-dl only takes Netscape format. In EditThisCookie the format can be changed to Netscape HTTP Cookie File.

YOUTUBE COOKIES
In order to get the cookies you need to first log into YouTube. You could then inspect the page and see all the cookies loaded. If you really wanted to you could then manually copy over all of the cookies manually into a cookies file. I don’t know how to do this so that the format is right, that is why I am using EditThisCookie and curl. However, you will notice that YouTube uses cookies from different domains which are needed for youtube-dl to work. Unfortunatly, EditThisCookie will not download all the cookies from several domains for a web page. You will need to manually export the cookies into a file for each of the domains https://youtube.com, https://acounts.google.com and https://www.google.com. You should finally get a file that looks something like this:

# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.youtube.com	FALSE	/	FALSE	1592746624.181169	APISID	xxxxxxxxx
.youtube.com	FALSE	/	FALSE	1529675666.4735	GPS	1
.youtube.com	FALSE	/	FALSE	1592746624.181027	HSID	xxxxx
.youtube.com	FALSE	/	FALSE	1592746624.956381	LOGIN_INFO	xxxxx
.youtube.com	FALSE	/	FALSE	1550712605.073926	PREF	xxxxx
.youtube.com	FALSE	/	TRUE	1592746624.181263	SAPISID	xxxxx
.youtube.com	FALSE	/	FALSE	1592746624.180932	SID	xxxxx
.youtube.com	FALSE	/	TRUE	1592746624.181105	SSID	xxxxxx
.youtube.com	FALSE	/	FALSE	1531743283.040211	VISITOR_INFO1_LIVE xxxxx
.youtube.com	FALSE	/	FALSE	0	YSC	xxxxx

# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.google.com	FALSE	/	FALSE	1592746624.009486	APISID	xxxxx
.google.com	FALSE	/	FALSE	1592746624.009335	HSID	xxxxx
.google.com	FALSE	/	FALSE	1545488676.021505	NID	xxxxxx
.google.com	FALSE	/	TRUE	1592746624.009559	SAPISID	xxxxx
.google.com	FALSE	/	FALSE	1592746624.009103	SID	xxxxxx
.google.com	FALSE	/	FALSE	1537454702.826293	SIDCC	xxxxxx
.google.com	FALSE	/	TRUE	1592746624.009422	SSID	xxxxxx
accounts.google.com	TRUE	/	TRUE	1592746624.009627	xxxxx
accounts.google.com	TRUE	/	TRUE	1592746624.106059	GAPS	xxxxx
accounts.google.com	TRUE	/	TRUE	1592746624.009204	LSID	xxxxx
accounts.google.com	TRUE	/	TRUE	1801458753.849165	SMSV	xxxxxx

# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by EditThisCookie
.google.com	FALSE	/	FALSE	1592746624.009486	APISID	xxxxx
.google.com	FALSE	/	FALSE	1592746624.009335	HSID	xxxxx
.google.com	FALSE	/	FALSE	1545488676.021505	NID	xxxxx
.google.com	FALSE	/	TRUE	1592746624.009559	SAPISID	xxxxx
.google.com	FALSE	/	FALSE	1592746624.009103	SID	xxxxx
.google.com	FALSE	/	FALSE	1537454702.826293	SIDCC	xxxxxx
.google.com	FALSE	/	TRUE	1592746624.009422	SSID	xxxxxx
YOUTUBE-DL COOKIE PARSER
There is still more work to be done on the cookies file in order for it to work with youtube-dl. Because youtube-dl cannot parse the format exported from EditThisCookie, the cookie file needs to be run through curl like this:

curl -b cookiefile.txt --cookie-jar newcookiefile.txt '/https://youtube.com'

That will create a new newcookiefile.txt which can be used with youtube-dl.

FINALLY
youtube-dl can now be used to download the private videos by using the --cookies flag like so:

youtube-dl --cookies=newcookiefile.txt https://youtu.be/Q-xxxx-xxxx

Yay!

Modified: June 22, 2018 - 10:58:47 PM
Site proudly generated by hakyll.

* For ik

* github without password
best is to ssh-keygen and give the pub key to github add keys
git --global config user.name frankieliu

* leetcode-cli
There is a python based one github.com/chenpengcheng/cli

And a node based on github.com/skygragon/leetcode-cli

And there is one using request and beautifulsoup (request doesn't
work) github.com/yask123/all_leetcode_questions


* R libraries
install.library("libraryname")
library("libraryname")

* R ascii plot
txtplot(cars[,1], cars[,2], pch-letters[1:2])

* FarmShare2

rice.stanford.edu
white.stanford.edu
oat.stanford.edu

srun --pty --qos=interactive $SHELL -l
srun --pty --partition=bigmem --mem=96G --qos=interactive $SHELL -l

module load turbovnc
vncserver

* anaconda
download from repo.continuum.io/archive

* miniconda
wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod +x m=Miniconda3-latest-Linux-x86_64.sh
./Miniconda3-latest-Linux-x86_64.sh
source ~/.bashrc

conda update conda
conda install pip

conda create -n py3 python pandas scikit-learn jupyter
source activate py3

* emacs error: package-initialize wrong type argument stringp nil
remove ~/.emacs.d/elpa/archives/melpa/archive-contents

* grep with perl regex
https://unix.stackexchange.com/questions/93327/using-a-perl-compatible-regex-with-gnu-grep-p

grep -P '...' file

* xerox altalink c8055
http://axilis.free.fr/ppd/?m&dir=Color/A3

* setting up intellij with emacs
https://www.jetbrains.com/help/idea/using-emacs-as-an-external-editor.html

* ipython reload
c.InteractiveShellApp.extensions = ['autoreload']
c.InteractiveShellApp.exec_lines = ['%autoreload 2']
